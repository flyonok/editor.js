(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["MmxModel"] = factory();
	else
		root["MmxModel"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/plugin.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/border-toolbar.pcss":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src!./src/styles/border-toolbar.pcss ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".tc-toolbar{background:#368be6;}.tc-toolbar--hidden{visibility:hidden}.tc-toolbar--hor{width:100%;height:21px;flex-direction:row;left:0;top:1px}.tc-toolbar--hor,.tc-toolbar--ver{display:flex;align-items:center;position:absolute;z-index:100}.tc-toolbar--ver{height:100%;width:21px;flex-direction:column;top:0;left:-1px}.tc-toolbar__plus{height:21px;width:21px;margin-top:0;}.tc-toolbar__plus--hor{margin-left:-10px}.tc-toolbar__plus--ver{margin-top:-10px}.tc-toolbar__shine-line--hor{min-height:1px;width:100%}.tc-toolbar__shine-line--ver{min-width:1px;height:100%}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://MmxModel/./src/styles/border-toolbar.pcss?./node_modules/css-loader!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/modelHeadTable.pcss":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src!./src/styles/modelHeadTable.pcss ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".mmxModelArticle{width:100%;border-radius:5px;margin-bottom:10px;flex-direction:row;height:150px}.mmxModelImage__right{border-radius:5px;color:#efefef;width:100%;max-height:100%;max-width:100%;width:auto;height:auto}.mmxModelImageDiv{width:50%;float:right;height:100%;justify-content:center;display:flex;align-items:center;padding:5px}.mmxModelImage__left{width:40%;border-radius:5px;padding:20px;color:#efefef;float:left;margin-right:20px}.mmxModelHead{color:#444;width:50%;height:100%;flex-direction:column;justify-content:center}.mmxModelCenter,.mmxModelTable{position:relative;display:flex;margin-top:5px;margin-bottom:20px}.mmxModelTable input[type=text],.mmxModelTable label{margin-left:5px;text-align:center;align-self:center;overflow:hidden;word-break:keep-all}.mmxModelTable label:first-child{font-weight:700;font-size:16px}.mmxModelTable input[type=text]{outline:none;position:relative;top:0;left:0;display:block;background:transparent;z-index:2;border:none;border-bottom:1px solid grey;text-indent:5px;font-size:14px}.mmxModelTable input[type=button]{margin-left:10px;font-size:14px}.mmxModelGroup:after,.mmxModelGroup:before{content:\\\"\\\";display:table}.mmxModelGroup:after{clear:both}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://MmxModel/./src/styles/modelHeadTable.pcss?./node_modules/css-loader!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/table-constructor.pcss":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src!./src/styles/table-constructor.pcss ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".tc-editor{padding:10px;position:relative;box-sizing:content-box;width:100%;left:-10px}.mmxModelDecsTitle{color:red;margin:5px}.mmxModelDesc{color:#7b7b7b}.mmxReadOnlyTableVisible{display:block}.mmxReadOnlyTableInvisible{display:none}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://MmxModel/./src/styles/table-constructor.pcss?./node_modules/css-loader!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/table.pcss":
/*!*******************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src!./src/styles/table.pcss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".tc-modelTable{width:100%;height:100%;border-collapse:collapse;table-layout:fixed;}.tc-modelTable__wrap{border:none;border-radius:3px;position:relative;height:100%;width:100%;box-sizing:border-box}.tc-modelTable__cell{border:1px solid #bdd6ee}.tc-modelTable__cell,.tc-modelTable__cellWithBorder{padding:.2em;vertical-align:top}.tc-modelTable__cellWithBorder{border-left:1px solid #bdd6ee;border-top:1px solid #bdd6ee;border-right:1px solid #bdd6ee;border-bottom:1px solid #86399f!important}.tc-modelTable__area{padding:10px;height:100%}.tc-modelTable__inp{outline:none;flex-grow:100;min-height:1.5em;height:128%;overflow:hidden;font-size:14px}.tc-modelTable .tc-modelTable__inp div{margin-top:10px}.tc-modelTable table,.tc-modelTable tbody,.tc-modelTable tr{height:128%}.tc-modelTable tbody tr td:first-child{border-left:none;width:25%;align-items:center}.tc-modelTable tbody tr td:last-child{border-right:none;width:75%}.tc-modelTable tbody tr td br{margin-top:5px}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://MmxModel/./src/styles/table.pcss?./node_modules/css-loader!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/tableReadOnly.pcss":
/*!***************************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/postcss-loader/src!./src/styles/tableReadOnly.pcss ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".tc-readOnlyTable{width:100%;height:100%;border-collapse:collapse;table-layout:fixed;font-size:12px;}.tc-readOnlyTable__wrap{border:none;border-radius:3px;position:relative;height:100%;width:100%;box-sizing:border-box}.tc-readOnlyTable__cell{border:1px solid #bdd6ee;padding:0;vertical-align:top}.tc-readOnlyTable__area{padding:10px;height:100%}.tc-readOnlyTable__inp{outline:none;flex-grow:100;min-height:1.5em;height:100%;overflow:hidden;font-size:16px;font-weight:700}.tc-readOnlyTable tbody tr:first-child td{border-top:none}.tc-readOnlyTable tbody tr:last-child td{border-bottom:2px solid #bdd6ee}.tc-readOnlyTable tbody tr td:last-child{border-right:none;width:75%}.tc-readOnlyTable tbody tr td:first-child{border-left:none;width:25%}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://MmxModel/./src/styles/tableReadOnly.pcss?./node_modules/css-loader!./node_modules/postcss-loader/src");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack://MmxModel/./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://MmxModel/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://MmxModel/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/borderToolBar.js":
/*!******************************!*\
  !*** ./src/borderToolBar.js ***!
  \******************************/
/*! exports provided: HorizontalBorderToolBar, VerticalBorderToolBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HorizontalBorderToolBar\", function() { return HorizontalBorderToolBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VerticalBorderToolBar\", function() { return VerticalBorderToolBar; });\n/* harmony import */ var _styles_border_toolbar_pcss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/border-toolbar.pcss */ \"./src/styles/border-toolbar.pcss\");\n/* harmony import */ var _styles_border_toolbar_pcss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_border_toolbar_pcss__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _img_plus_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./img/plus.svg */ \"./src/img/plus.svg\");\n/* harmony import */ var _img_plus_svg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_img_plus_svg__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _documentUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./documentUtils */ \"./src/documentUtils.js\");\n\r\n\r\n\r\n\r\nconst CSS = {\r\n  highlightingLine: 'tc-toolbar',\r\n  hidden: 'tc-toolbar--hidden',\r\n  horizontalToolBar: 'tc-toolbar--hor',\r\n  horizontalHighlightingLine: 'tc-toolbar__shine-line--hor',\r\n  verticalToolBar: 'tc-toolbar--ver',\r\n  verticalHighlightingLine: 'tc-toolbar__shine-line--ver',\r\n  plusButton: 'tc-toolbar__plus',\r\n  horizontalPlusButton: 'tc-toolbar__plus--hor',\r\n  verticalPlusButton: 'tc-toolbar__plus--ver',\r\n  area: 'tc-table__area',\r\n};\r\n\r\n/**\r\n * An item with a menu that appears when you hover over a _table border\r\n */\r\nclass BorderToolBar {\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    this._plusButton = this._generatePlusButton();\r\n    this._highlightingLine = this._generateHighlightingLine();\r\n    this._toolbar = this._generateToolBar([this._plusButton, this._highlightingLine]);\r\n  }\r\n\r\n  /**\r\n   * Make the entire item invisible\r\n   */\r\n  hide() {\r\n    this._toolbar.classList.add(CSS.hidden);\r\n  }\r\n\r\n  /**\r\n   * Make the entire item visible\r\n   */\r\n  show() {\r\n    this._toolbar.classList.remove(CSS.hidden);\r\n    this._highlightingLine.classList.remove(CSS.hidden);\r\n  };\r\n\r\n  /**\r\n   * Hide only highlightingLine\r\n   */\r\n  hideLine() {\r\n    this._highlightingLine.classList.add(CSS.hidden);\r\n  };\r\n\r\n  /**\r\n   * returns HTMLElement for insert in DOM\r\n   * @returns {HTMLElement}\r\n   */\r\n  get htmlElement() {\r\n    return this._toolbar;\r\n  }\r\n\r\n  /**\r\n   * Generates a menu button to add rows and columns.\r\n   * @return {HTMLElement}\r\n   */\r\n  _generatePlusButton() {\r\n    const button = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_2__[\"create\"])('div', [CSS.plusButton]);\r\n\r\n    button.innerHTML = _img_plus_svg__WEBPACK_IMPORTED_MODULE_1___default.a;\r\n    button.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      const e = new CustomEvent('click', {'detail': {'x': event.pageX, 'y': event.pageY}, 'bubbles': true});\r\n\r\n      this._toolbar.dispatchEvent(e);\r\n    });\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Generates line which сover border of _table\r\n   */\r\n  _generateHighlightingLine() {\r\n    const line = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_2__[\"create\"])('div', [CSS.highlightingLine]);\r\n\r\n    line.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      const e = new CustomEvent('click', {'bubbles': true});\r\n\r\n      this._toolbar.dispatchEvent(e);\r\n    });\r\n    return line;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Generates the main component of the class\r\n   * @param {Element[]} children - child elements of toolbar\r\n   */\r\n  _generateToolBar(children) {\r\n    const bar = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_2__[\"create\"])('div', [CSS.hidden], null, children);\r\n\r\n    bar.addEventListener('mouseleave', (event) => {\r\n        this._recalcMousePos(event);\r\n      }\r\n    );\r\n\r\n    return bar;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Recalc mouse position when the mouse left toolbar\r\n   * @param {MouseEvent} event\r\n   */\r\n  _recalcMousePos(event) {\r\n    this.hide();\r\n    const area = document.elementFromPoint(event.pageX, event.pageY);\r\n\r\n    if (area !== null && area.classList.contains(CSS.area)) {\r\n      const e = new MouseEvent('mouseover', {clientX: event.pageX, clientY: event.pageY});\r\n      area.dispatchEvent(e);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * An item with a menu that appears when you hover over a _table border horizontally\r\n */\r\nclass HorizontalBorderToolBar extends BorderToolBar {\r\n  /**\r\n   * Creates\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    this._toolbar.classList.add(CSS.horizontalToolBar);\r\n    this._plusButton.classList.add(CSS.horizontalPlusButton);\r\n    this._highlightingLine.classList.add(CSS.horizontalHighlightingLine);\r\n  }\r\n\r\n  /**\r\n   * Move ToolBar to y coord\r\n   * @param {number} y - coord\r\n   */\r\n  showIn(y) {\r\n    const halfHeight = Math.floor(Number.parseInt(window.getComputedStyle(this._toolbar).height) / 2);\r\n\r\n    this._toolbar.style.top = (y - halfHeight) + 'px';\r\n    this.show();\r\n  }\r\n}\r\n\r\n/**\r\n * An item with a menu that appears when you hover over a _table border vertically\r\n */\r\nclass VerticalBorderToolBar extends BorderToolBar {\r\n  /**\r\n   * Creates\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    this._toolbar.classList.add(CSS.verticalToolBar);\r\n    this._plusButton.classList.add(CSS.verticalPlusButton);\r\n    this._highlightingLine.classList.add(CSS.verticalHighlightingLine);\r\n  }\r\n\r\n  /**\r\n   * Move ToolBar to x coord\r\n   * @param {number} x - coord\r\n   */\r\n  showIn(x) {\r\n    const halfWidth = Math.floor(Number.parseInt(window.getComputedStyle(this._toolbar).width) / 2);\r\n\r\n    this._toolbar.style.left = (x - halfWidth) + 'px';\r\n    this.show();\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/borderToolBar.js?");

/***/ }),

/***/ "./src/documentUtils.js":
/*!******************************!*\
  !*** ./src/documentUtils.js ***!
  \******************************/
/*! exports provided: create, getCoords, getSideByCoords, checkFiledsIsRepeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCoords\", function() { return getCoords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSideByCoords\", function() { return getSideByCoords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkFiledsIsRepeat\", function() { return checkFiledsIsRepeat; });\n/**\r\n * Checks the item is not missed or messed\r\n * @param {object|string[]|Element[]|HTMLElement|string} elem - element\r\n * @returns {boolean} true if element is correct\r\n * @private\r\n */\r\nfunction _isNotMissed(elem) {\r\n  return (!(elem === undefined || elem === null));\r\n}\r\n\r\n/**\r\n * Create DOM element with set parameters\r\n * @param {string} tagName - Html tag of the element to be created\r\n * @param {string[]} cssClasses - Css classes that must be applied to an element\r\n * @param {object} attrs - Attributes that must be applied to the element\r\n * @param {Element[]} children - child elements of creating element\r\n * @returns {HTMLElement} the new element\r\n */\r\nfunction create(tagName, cssClasses = null, attrs = null, children = null) {\r\n  const elem = document.createElement(tagName);\r\n  if (_isNotMissed(cssClasses)) {\r\n    for (let i = 0; i < cssClasses.length; i++) {\r\n      if (_isNotMissed(cssClasses[i])) {\r\n        elem.classList.add(cssClasses[i]);\r\n      }\r\n    }\r\n  }\r\n  if (_isNotMissed(attrs)) {\r\n    for (let key in attrs) {\r\n      elem.setAttribute(key, attrs[key]);\r\n    }\r\n  }\r\n  if (_isNotMissed(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (_isNotMissed(children[i])) {\r\n        elem.appendChild(children[i]);\r\n      }\r\n    }\r\n  }\r\n  return elem;\r\n}\r\n\r\n/**\r\n * Get item position relative to document\r\n * @param {HTMLElement} elem - item\r\n * @returns {{x1: number, y1: number, x2: number, y2: number}} coordinates of the upper left (x1,y1) and lower right(x2,y2) corners\r\n */\r\nfunction getCoords(elem) {\r\n  const rect = elem.getBoundingClientRect();\r\n\r\n  return {\r\n    y1: Math.floor(rect.top + window.pageYOffset),\r\n    x1: Math.floor(rect.left + window.pageXOffset),\r\n    x2: Math.floor(rect.right + window.pageXOffset),\r\n    y2: Math.floor(rect.bottom + window.pageYOffset)\r\n  };\r\n}\r\n\r\n/**\r\n * Recognizes which side of the container  is closer to (x,y)\r\n * @param {{x1: number, y1: number, x2: number, y2: number}} coords - coords of container\r\n * @param x - x coord\r\n * @param y - y coord\r\n * @return {string}\r\n */\r\nfunction getSideByCoords(coords, x, y) {\r\n  let side;\r\n  const sizeArea = 10;\r\n\r\n  // a point is close to the boundary if the distance between them is less than the allowed distance.\r\n  // +1px on each side due to fractional pixels\r\n  if (x - coords.x1 >= -1 && x - coords.x1 <= sizeArea + 1) {\r\n    side = 'left';\r\n  }\r\n  if (coords.x2 - x >= -1 && coords.x2 - x <= sizeArea + 1) {\r\n    side = 'right';\r\n  }\r\n  if (y - coords.y1 >= -1 && y - coords.y1 <= sizeArea + 1) {\r\n    side = 'top';\r\n  }\r\n  if (coords.y2 - y >= -1 && coords.y2 - y <= sizeArea + 1) {\r\n    side = 'bottom';\r\n  }\r\n\r\n  return side;\r\n}\r\n\r\n/**\r\n* \r\n* check selected model object fileds is all repeat\r\n* 检查整个字符串是否完全重复, 比如 ‘1 2 3 4 1 2 3 4’\r\n* @param {string} fileds\r\n* @returns {Object} {isRepeat: boolean,repeatWords: string}\r\n*/\r\nfunction checkFiledsIsRepeat(fields) {\r\n  console.log('enter checkFiledsIsRepeat', fields);\r\n  // let filedsArr = undefined;\r\n  // if ( fields.push !== undefined && Array.isArray(fields)) {\r\n  //   filedsArr = fields;\r\n  // }\r\n  // else {\r\n  //   fieldsArr = fields.split(' ');\r\n  // }\r\n  // find first words(not empty)\r\n  let b = fields.trim().split(' ');\r\n  if (b.length < 2) {\r\n    return {\r\n      isRepeat: false,\r\n      repeatWords: ' '\r\n    };\r\n  }\r\n  // console.log(fields.trim().split(' '));\r\n  // let a = fields.split.trim().split(' ');\r\n  // console.log('a', a);\r\n  // let fieldsArr = fields.split(' ');\r\n  // console.log(filedsArr);\r\n  let firstSubString = '';\r\n  for (let i = 0; i < b.length; i++) {\r\n    if (b[i].trim().length != 0) {\r\n      firstSubString = b[i].trim();\r\n      // console.log('1', firstSubString);\r\n      break;\r\n    }\r\n  }\r\n  // console.log(firstSubString);\r\n  if (firstSubString !== undefined) {\r\n    let findIndexColl = [];\r\n    let findIndex = fields.indexOf(firstSubString);\r\n    // collect all find index\r\n    while (findIndex != -1) {\r\n      findIndexColl.push(findIndex);\r\n      findIndex = fields.indexOf(firstSubString, findIndex + 1);\r\n    }\r\n    // check find collect substring\r\n    if (findIndexColl.length >= 2 && findIndexColl[0] === 0) {\r\n      let firstSubIndex = findIndexColl[0];\r\n      let subStringColl = [];\r\n      let subStringLenth = 0;\r\n      let firstSubStringColl = ' ';\r\n      // let secondSubStringLength = 0;\r\n      for (let j = 1; j < findIndexColl.length; j++) {\r\n        if (j === 1 && j === findIndexColl.length - 1) {\r\n          subStringLenth = findIndexColl[j] - firstSubIndex;\r\n          firstSubStringColl = fields.substring(firstSubIndex, findIndexColl[j]);\r\n          let last = fields.substring(findIndexColl[j]);\r\n          if (last.trim() != firstSubStringColl.trim()) {\r\n            return {\r\n              isRepeat: false,\r\n              repeatWords: ' '\r\n            };\r\n          }\r\n          else {\r\n            return {\r\n              isRepeat: true,\r\n              repeatWords: firstSubStringColl\r\n            };\r\n          }\r\n          // firstSubIndex = findIndexColl[j];\r\n          // subStringColl.push(firstSubString);\r\n        }\r\n        else if (j == 1) {\r\n          subStringLenth = findIndexColl[j] - firstSubIndex;\r\n          firstSubStringColl = fields.substring(firstSubIndex, findIndexColl[j]);\r\n        }\r\n        else {\r\n          if ((findIndexColl[j] - firstSubIndex) != subStringLenth) {\r\n            return {\r\n              isRepeat: false,\r\n              repeatWords: ''\r\n            };\r\n          }\r\n          let temp = firstSubStringColl;\r\n          firstSubStringColl = fields.substring(firstSubIndex, findIndexColl[j])\r\n          // if (j == length - 1) {\r\n          //   firstSubString = fields.substring(findIndexColl[j]);\r\n          // }\r\n          // else {\r\n          //   firstSubString = fields.substring(firstSubIndex, findIndexColl[j])\r\n          // }\r\n          if (temp.trim() != firstSubStringColl.trim()) {\r\n            return {\r\n              isRepeat: false,\r\n              repeatWords: ' '\r\n            };\r\n          }\r\n        }\r\n        firstSubIndex = findIndexColl[j];\r\n      }\r\n      // last index process\r\n      let final = fields.substring(firstSubIndex);\r\n      if (final.trim() != firstSubStringColl.trim()) {\r\n        return {\r\n          isRepeat: false,\r\n          repeatWords: ' '\r\n        };\r\n      }\r\n      else {\r\n        return {\r\n          isRepeat: true,\r\n          repeatWords: firstSubStringColl\r\n        };\r\n      }\r\n    }\r\n    else {\r\n      return {\r\n        isRepeat: false,\r\n        repeatWords: ' '\r\n      };\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      isRepeat: false,\r\n      repeatWords: ' '\r\n    };\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/documentUtils.js?");

/***/ }),

/***/ "./src/img/plus.svg":
/*!**************************!*\
  !*** ./src/img/plus.svg ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg viewBox=\\\"0 0 20 20\\\"><circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"10\\\" fill=\\\"#388AE5\\\"></circle><path fill=\\\"#FFF\\\" d=\\\"M10.9 9.1h3.7a.9.9 0 1 1 0 1.8h-3.7v3.7a.9.9 0 1 1-1.8 0v-3.7H5.4a.9.9 0 0 1 0-1.8h3.7V5.4a.9.9 0 0 1 1.8 0v3.7z\\\"></path></svg>\"\n\n//# sourceURL=webpack://MmxModel/./src/img/plus.svg?");

/***/ }),

/***/ "./src/img/shapes.svg":
/*!****************************!*\
  !*** ./src/img/shapes.svg ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 18 14\\\"><path d=\\\"M480 288H320c-17.67 0-32 14.33-32 32v160c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V320c0-17.67-14.33-32-32-32zm-16 176H336V336h128v128zM128 256C57.31 256 0 313.31 0 384s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 208c-44.11 0-80-35.89-80-80s35.89-80 80-80 80 35.89 80 80-35.89 80-80 80zm378.98-262.86L400.07 18.29C392.95 6.1 380.47 0 368 0s-24.95 6.1-32.07 18.29L229.02 201.14c-14.26 24.38 3.56 54.86 32.07 54.86h213.82c28.51 0 46.33-30.48 32.07-54.86zM280.61 208L368 58.53 455.39 208H280.61z\\\"></path></svg>\"\n\n//# sourceURL=webpack://MmxModel/./src/img/shapes.svg?");

/***/ }),

/***/ "./src/modelHeadTable.js":
/*!*******************************!*\
  !*** ./src/modelHeadTable.js ***!
  \*******************************/
/*! exports provided: ModelHeadTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ModelHeadTable\", function() { return ModelHeadTable; });\n/* harmony import */ var _documentUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./documentUtils */ \"./src/documentUtils.js\");\n/* harmony import */ var _styles_modelHeadTable_pcss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/modelHeadTable.pcss */ \"./src/styles/modelHeadTable.pcss\");\n/* harmony import */ var _styles_modelHeadTable_pcss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_modelHeadTable_pcss__WEBPACK_IMPORTED_MODULE_1__);\n// import {create, getCoords, getSideByCoords} from './documentUtils';\r\n\r\n\r\n\r\nconst CSS = {\r\n  article: 'mmxModelArticle',\r\n  imageRight: 'mmxModelImage__right',\r\n  imageLeft: 'mmxModelImage__left',\r\n  table: 'mmxModelTable',\r\n  center: 'mmxModelCenter',\r\n  group: 'mmxModelGroup',\r\n  divHead: 'mmxModelHead',\r\n  imageParentDiv: 'mmxModelImageDiv',\r\n};\r\n\r\n/**\r\n * Generates and manages model head _table contents.\r\n */\r\nclass ModelHeadTable {\r\n  /**\r\n   * Creates\r\n   */\r\n  constructor(data, modelSelCallBack = undefined) {\r\n    this._modelSelCallBack = modelSelCallBack;\r\n    this._element = this._createDivWrapper(data);\r\n    // this._parent = parent;\r\n    this._hangEvents();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 创建整个造型的表头\r\n   */\r\n  _createDivWrapper(data) {\r\n    this._divHead = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.divHead], null, [this._createDivType(data), this._createDivTitle(data), this._createDivAttributes(data)]);\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.article, CSS.group], null, [this._createImageAttr(data), this._divHead]);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 创建属性div元素\r\n   */\r\n  _createDivAttributes(data) {\r\n    let attrContentDefault = !!data.Tags ? data.Tags : '';\r\n    let labelEle = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('label', null, { for: 'modelAttr' });\r\n    labelEle.innerHTML = '属性：';\r\n    this._labelAttrEle = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('input', null, { type: 'text', name: 'modelAttr' });\r\n    this._labelAttrEle.placeholder = '属性用空格分开';\r\n    this._labelAttrEle.value = attrContentDefault;\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.table, CSS.center], null, [labelEle, this._labelAttrEle]);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 创建造型缩略图\r\n   */\r\n  _createImageAttr(data) {\r\n    if (data.Thumb === undefined && data.imgByteStr === undefined) {\r\n      this._imgEle = undefined;\r\n      return undefined;\r\n    }\r\n    // let imgUrl = !!data.imgByteStr ? data.imgByteStr.changingThisBreaksApplicationSecurity : !!data.Thumb? data.Thumb : './assets/dog1.jpg';\r\n    let imgUrl = !!data.Thumb ? 'file://' + data.Thumb : !!data.imgByteStr.changingThisBreaksApplicationSecurity ? data.imgByteStr.changingThisBreaksApplicationSecurity : './assets/dog1.jpg';\r\n    // let imgUrl = !!data.Thumb ? data.Thumb : './assets/dog1.jpg';\r\n    this._imgEle = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('img', [CSS.imageRight], { alt: 'img', src: imgUrl });\r\n    let divImg = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.imageParentDiv], null, [this._imgEle]);\r\n    return divImg;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 创建类型div元素\r\n   */\r\n  _createDivType(data) {\r\n    // console.log('enter _createDivType');\r\n    let labelEle = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('label', null, { for: 'modelType' });\r\n    let subName = !!data.name ? data.name : '';\r\n    labelEle.innerHTML = '类型：';\r\n    // this._inputTypeTxt = create('input', null, { type: 'text', name: 'modelType', readonly:'true' });\r\n    this._inputTypeTxt = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('input', null, { type: 'text', name: 'modelType' });\r\n    this._inputTypeTxt.value = subName;\r\n    this._modelSelBtn = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('input', null, { type: 'button', name: 'selectModel', value: '选择造型...' });\r\n    // this._modelSelBtn = inputBtn;\r\n    // console.log('_createDivType finished!');\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.table], null, [labelEle, this._inputTypeTxt, this._modelSelBtn]);\r\n    // return divEle;\r\n  }\r\n  /**\r\n   * 创建标题div元素\r\n   */\r\n  _createDivTitle(data) {\r\n    let labelEle = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('label', null, { for: 'modelTitle' });\r\n    labelEle.innerHTML = '内部标题：';\r\n    let title = !!data.innerTilte ? data.innerTilte : '';\r\n    this._inputTitleTxt = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('input', null, {\r\n      type: 'text', name: 'modelTitle',\r\n      placeholder: '造型内部小标题，可空', value: title\r\n    });\r\n    // this._inputTitleTxt = create('input', null, {\r\n    //   type: 'text', name: 'modelTitle',\r\n    //   placeholder: '造型内部小标题，可空'\r\n    // });\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.table, CSS.center], null, [labelEle, this._inputTitleTxt]);\r\n  }\r\n\r\n  /**\r\n   * get model type name\r\n   * @return {string}\r\n   */\r\n  get modelTypeName() {\r\n    return this._inputTypeTxt.value.trim();\r\n  }\r\n  /**\r\n   * get html element of table\r\n   * @return {HTMLElement}\r\n   */\r\n  get htmlElement() {\r\n    return this._element;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * hang necessary events\r\n   */\r\n  _hangEvents() {\r\n    this._modelSelBtn.addEventListener('click', (event) => {\r\n      if (this._modelSelCallBack !== undefined) {\r\n        let returnData = this._modelSelCallBack(this._modifyHeadDataCall());\r\n        // this._modifyHeadData(returnData);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 修改造型头的各项数据\r\n   * 闭包回调\r\n   */\r\n  _modifyHeadDataCall() {\r\n    let that = this;\r\n    let _modifyHeadData = function (data) {\r\n      if (data.Name) {\r\n        that._inputTypeTxt.value = data.Name;\r\n      }\r\n      // if (data.Tags) {\r\n      //   that._labelAttrEle.innerHTML = data.Tags;\r\n      // }\r\n      if (data.Thumb !== undefined || data.imgByteStr !== undefined) {\r\n        if (that._imgEle !== undefined) {\r\n          // let imgUrl = !!data.imgByteStr ? data.imgByteStr.changingThisBreaksApplicationSecurity : data.Thumb;\r\n          let imgUrl = !!data.Thumb ? 'file://' + data.Thumb : data.imgByteStr.changingThisBreaksApplicationSecurity;\r\n          that._imgEle.src = imgUrl;\r\n        }\r\n        else {\r\n          let img = that._createImageAttr(data);\r\n          // that._element.appendChild(img);\r\n          that._divHead.insertAdjacentElement('beforebegin', img);\r\n        }\r\n      }\r\n    }\r\n    return _modifyHeadData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * get model head parameter json object\r\n   */\r\n  getHeadParam() {\r\n    try {\r\n      let obj = {};\r\n      obj['板块头'] = {};\r\n      obj['板块头']['标题'] = this._inputTitleTxt.value.trim();\r\n      obj['属性'] = this._labelAttrEle.value.trim();\r\n      obj.name = this._inputTypeTxt.value.trim();\r\n      // obj['属性'] = this._labelAttrEle.innerHTML;\r\n      console.log('getHeadParam', obj);\r\n      return obj;\r\n    }\r\n    catch (e) {\r\n      console.log('getHeadParam exception:', e);\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/modelHeadTable.js?");

/***/ }),

/***/ "./src/plugin.js":
/*!***********************!*\
  !*** ./src/plugin.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const TableConstructor = __webpack_require__(/*! ./tableConstructor */ \"./src/tableConstructor.js\").TableConstructor;\r\nconst svgIcon = __webpack_require__(/*! ./img/shapes.svg */ \"./src/img/shapes.svg\");\r\n\r\nconst CSS = {\r\n  input: 'tc-table__inp'\r\n};\r\n\r\n/**\r\n *  Tool for table's creating\r\n *  @typedef {object} TableData - object with the data transferred to form a table\r\n *  @property {string[][]} content - two-dimensional array which contains table content\r\n */\r\nclass MmxModel {\r\n  /**\r\n   * Allow to press Enter inside the CodeTool textarea\r\n   * @returns {boolean}\r\n   * @public\r\n   */\r\n  static get enableLineBreaks() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get Tool toolbox settings\r\n   * icon - Tool icon's SVG\r\n   * title - title to show in toolbox\r\n   *\r\n   * @return {{icon: string, title: string}}\r\n   */\r\n  static get toolbox() {\r\n    return {\r\n      // icon: svgIcon,\r\n      icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" width=\"18px\" height=\"14px\" viewBox=\"0 0 18 14\"><g transform=\"translate(0,-283)\"><path d=\"M 15.125,290.875 H 10.75 c -0.483164,0 -0.875,0.39184 -0.875,0.875 v 4.375 c 0,0.48316 0.391836,0.875 0.875,0.875 h 4.375 C 15.608164,297 16,296.60816 16,296.125 v -4.375 c 0,-0.48316 -0.391836,-0.875 -0.875,-0.875 z m -0.4375,4.8125 h -3.5 v -3.5 h 3.5 z M 5.5,290 C 3.56707,290 2,291.56707 2,293.5 2,295.43293 3.56707,297 5.5,297 7.43293,297 9,295.43293 9,293.5 9,291.56707 7.43293,290 5.5,290 Z m 0,5.6875 c -1.206133,0 -2.1875,-0.98137 -2.1875,-2.1875 0,-1.20613 0.981367,-2.1875 2.1875,-2.1875 1.206133,0 2.1875,0.98137 2.1875,2.1875 0,1.20613 -0.981367,2.1875 -2.1875,2.1875 z m 10.362734,-7.18758 -2.923321,-4.9998 C 12.744726,283.1668 12.403476,283 12.0625,283 c -0.340977,0 -0.682227,0.1668 -0.876914,0.50012 l -2.92332,4.9998 C 7.872344,289.16656 8.359606,290 9.139179,290 h 5.846641 c 0.77957,0 1.266836,-0.83344 0.876914,-1.50008 z m -6.189805,0.18758 2.389571,-4.08707 2.38957,4.08707 z\"/></g></svg>',\r\n      title: 'Model'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Render plugin`s main Element and fill it with saved data\r\n   * @param {TableData} data — previously saved data\r\n   * @param {object} config - user config for Tool\r\n   * @param {object} api - Editor.js API\r\n   */\r\n  constructor({data, config, api}) {\r\n    this.api = api;\r\n\r\n    this._tableConstructor = new TableConstructor(data, config, api);\r\n  }\r\n\r\n  /**\r\n   * Return Tool's view\r\n   * @returns {HTMLDivElement}\r\n   * @public\r\n   */\r\n  render() {\r\n    return this._tableConstructor.htmlElement;\r\n  }\r\n\r\n  /**\r\n   * Extract Tool's data from the view\r\n   * @returns {TableData} - saved data\r\n   * @public\r\n   */\r\n  save(toolsContent) {\r\n    // modified by xiaowy 2020/09/21\r\n    // const table = toolsContent.querySelector('table');\r\n    // const table = toolsContent.querySelector('table.tc-table');\r\n    // // console.log(table);\r\n    // const data = [];\r\n    // const rows = table.rows;\r\n\r\n    // for (let i = 0; i < rows.length; i++) {\r\n    //   const row = rows[i];\r\n    //   const cols = Array.from(row.cells);\r\n    //   const inputs = cols.map(cell => cell.querySelector('.' + CSS.input));\r\n    //   const isWorthless = inputs.every(this._isEmpty);\r\n\r\n    //   if (isWorthless) {\r\n    //     continue;\r\n    //   }\r\n    //   data.push(inputs.map(input => input.innerHTML));\r\n    // }\r\n\r\n    // // added by xiaowy 2020/09/21 for 板块名称\r\n    // const blockName = toolsContent.querySelector('.mmxModelDecsTitle');\r\n    // if (blockName !== null) {\r\n    //   return {\r\n    //     name : blockName.innerHTML,\r\n    //     content: data\r\n    //   };\r\n    // }\r\n    // else {\r\n    //   return {\r\n    //     content: data\r\n    //   }\r\n    // }\r\n    // return {\r\n    //       content: this._tableConstructor.getJsonResult()\r\n    //     };\r\n    return this._tableConstructor.getJsonResult();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Check input field is empty\r\n   * @param {HTMLElement} input - input field\r\n   * @return {boolean}\r\n   */\r\n  _isEmpty(input) {\r\n    return !input.textContent.trim();\r\n  }\r\n}\r\n\r\nmodule.exports = MmxModel;\r\n\n\n//# sourceURL=webpack://MmxModel/./src/plugin.js?");

/***/ }),

/***/ "./src/styles/border-toolbar.pcss":
/*!****************************************!*\
  !*** ./src/styles/border-toolbar.pcss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/src!./border-toolbar.pcss */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/border-toolbar.pcss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://MmxModel/./src/styles/border-toolbar.pcss?");

/***/ }),

/***/ "./src/styles/modelHeadTable.pcss":
/*!****************************************!*\
  !*** ./src/styles/modelHeadTable.pcss ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/src!./modelHeadTable.pcss */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/modelHeadTable.pcss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://MmxModel/./src/styles/modelHeadTable.pcss?");

/***/ }),

/***/ "./src/styles/table-constructor.pcss":
/*!*******************************************!*\
  !*** ./src/styles/table-constructor.pcss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/src!./table-constructor.pcss */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/table-constructor.pcss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://MmxModel/./src/styles/table-constructor.pcss?");

/***/ }),

/***/ "./src/styles/table.pcss":
/*!*******************************!*\
  !*** ./src/styles/table.pcss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/src!./table.pcss */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/table.pcss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://MmxModel/./src/styles/table.pcss?");

/***/ }),

/***/ "./src/styles/tableReadOnly.pcss":
/*!***************************************!*\
  !*** ./src/styles/tableReadOnly.pcss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!../../node_modules/postcss-loader/src!./tableReadOnly.pcss */ \"./node_modules/css-loader/index.js!./node_modules/postcss-loader/src/index.js!./src/styles/tableReadOnly.pcss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://MmxModel/./src/styles/tableReadOnly.pcss?");

/***/ }),

/***/ "./src/table.js":
/*!**********************!*\
  !*** ./src/table.js ***!
  \**********************/
/*! exports provided: Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Table\", function() { return Table; });\n/* harmony import */ var _documentUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./documentUtils */ \"./src/documentUtils.js\");\n/* harmony import */ var _styles_table_pcss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/table.pcss */ \"./src/styles/table.pcss\");\n/* harmony import */ var _styles_table_pcss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_table_pcss__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\nconst CSS = {\r\n  table: 'tc-modelTable',\r\n  inputField: 'tc-modelTable__inp',\r\n  cell: 'tc-modelTable__cell',\r\n  cellWithBorder: 'tc-modelTable__cellWithBorder',\r\n  wrapper: 'tc-modelTable__wrap',\r\n  area: 'tc-modelTable__area',\r\n};\r\n\r\n/**\r\n * Generates and manages _table contents.\r\n */\r\nclass Table {\r\n  /**\r\n   * Creates\r\n   */\r\n  constructor() {\r\n    this._numberOfColumns = 0;\r\n    this._numberOfRows = 0;\r\n    this._element = this._createTableWrapper();\r\n    this._table = this._element.querySelector('table');\r\n    this._objSepIndexColl = [];\r\n    this._firstColumnIsRead = true; // 默认不可以修改对象名称 2020/10/14\r\n    this._repeat = 100; // 对象的重复模式0，1，-1\r\n\r\n    this._hangEvents();\r\n  }\r\n\r\n  /**\r\n   * Add column in table on index place\r\n   * @param {number} index - number in the array of columns, where new column to insert,-1 if insert at the end\r\n   */\r\n  addColumn(index = -1) {\r\n    this._numberOfColumns++;\r\n    // console.log('this._objSepIndexColl', this._objSepIndexColl);\r\n    /** Add cell in each row */\r\n    const rows = this._table.rows;\r\n    let cellConfig = { isObjSep: false, isWritable: false };\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      let isFirstColumn = false;\r\n      if (rows[i].cells.length === 0) {\r\n        isFirstColumn = true;\r\n      }\r\n      const cell = rows[i].insertCell(index);\r\n      // if (this._numberOfColumns === 1) {\r\n      //   this._fillReadOnlyCell(cell);\r\n      //   continue;\r\n      // }\r\n      if (this._objSepIndexColl && this._objSepIndexColl.indexOf(i) >= 0) {\r\n        // console.log('find!!!');\r\n        // this._fillCell(cell, true)\r\n        cellConfig.isObjSep = true;\r\n      }\r\n      else {\r\n        cellConfig.isObjSep = false;\r\n      }\r\n\r\n      if (this._firstColumnIsRead && isFirstColumn) {\r\n        cellConfig.isWritable = false;\r\n      }\r\n      else {\r\n        cellConfig.isWritable = true;\r\n      }\r\n      this._fillCell(cell, cellConfig);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add row in table on index place\r\n   * @param {number} index - number in the array of columns, where new column to insert,-1 if insert at the end\r\n   * @return {HTMLElement} row\r\n   */\r\n  addRow(index = -1) {\r\n    this._numberOfRows++;\r\n    const row = this._table.insertRow(index);\r\n    if (this._objSepIndexColl && this._objSepIndexColl.indexOf(this._numberOfRows) > 0) {\r\n      this._fillRow(row, true);\r\n    }\r\n    else {\r\n      this._fillRow(row);\r\n    }\r\n\r\n    return row;\r\n  };\r\n\r\n  /**\r\n   * Del row in table on index place\r\n   * 国良增加 2020/09/19\r\n   * @param {number} index - number in the array of columns\r\n   *\r\n  */\r\n  delRow(index = 0) {\r\n    if (index >= this._numberOfRows) return;\r\n    this._table.deleteRow(index);\r\n    this._numberOfRows--;\r\n    // add by xiaowy\r\n    if (this._numberOfRows === 0) {\r\n      this._numberOfColumns = 0;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * get html element of table\r\n   * @return {HTMLElement}\r\n   */\r\n  get htmlElement() {\r\n    return this._element;\r\n  }\r\n\r\n  /**\r\n   * set object reprate index collect\r\n   * 设置造型列表对象的分隔行集合\r\n   */\r\n  set objSepIndexColl(value) {\r\n    // console.log('enter objSepIndexColl:', value, this._objSepIndexColl);\r\n    this._objSepIndexColl = value;\r\n    // console.log('after objSepIndexColl:', this._objSepIndexColl);\r\n  }\r\n\r\n  /**\r\n   * get real table tag\r\n   * @return {HTMLElement}\r\n   */\r\n  get body() {\r\n    return this._table;\r\n  }\r\n\r\n  /**\r\n   * get rows of table\r\n   * @return number\r\n   */\r\n  get rows() {\r\n    return this._numberOfRows;\r\n  }\r\n\r\n  set firstColumnIsRead(value) {\r\n    this._firstColumnIsRead = value;\r\n  }\r\n\r\n  set repeat(value) {\r\n    this._repeat = value;\r\n    if (this._repeat === -1) {\r\n      this._firstColumnIsRead = false;\r\n    }\r\n    else {\r\n      this._firstColumnIsRead = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns selected/editable cell\r\n   * @return {HTMLElement}\r\n   */\r\n  get selectedCell() {\r\n    return this._selectedCell;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Creates table structure\r\n   * @return {HTMLElement} tbody - where rows will be\r\n   */\r\n  _createTableWrapper() {\r\n    let tableBr = document.createElement('br');\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.wrapper], null, [Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('table', [CSS.table]), tableBr]);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Create editable area of cell\r\n   * @return {HTMLElement} - the area\r\n   */\r\n  _createContenteditableArea() {\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.inputField], { contenteditable: 'true' });\r\n    // return create('textarea', [CSS.inputField], { contenteditable: 'true' });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Create editable area of cell\r\n   * @return {HTMLElement} - the area\r\n   */\r\n  _createContentReadOnlyArea() {\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.inputField], { contenteditable: 'false' });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Fills the empty cell of the editable area\r\n   * @param {HTMLElement} cell - empty cell\r\n   * @param {Object} cellConfig => {isObjSep:false, isWritable:false}\r\n   */\r\n  _fillCell(cell, cellConfig = { isObjSep: false, isWritable: false }) {\r\n    if (cellConfig.isObjSep) {\r\n      cell.classList.add(CSS.cellWithBorder);\r\n    }\r\n    else {\r\n      cell.classList.add(CSS.cell);\r\n    }\r\n    if (cellConfig.isWritable) {\r\n      const content = this._createContenteditableArea();\r\n      // content.onpaste = this._pasteEvent;\r\n      content.addEventListener('paste', this._pasteEvent);\r\n\r\n      cell.appendChild(Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.area], null, [content]));\r\n    }\r\n    else {\r\n      const content = this._createContentReadOnlyArea();\r\n      cell.appendChild(Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.area], null, [content]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * process table input cell paste event\r\n   * @returns {boolean}\r\n   */\r\n  _pasteEvent(event) {\r\n    let selection = window.getSelection();\r\n    if (selection && selection.rangeCount) {\r\n      let range = selection.getRangeAt(0);\r\n      if (range) {\r\n        range.deleteContents();\r\n      }\r\n    }\r\n    let clipData = event.clipboardData;\r\n    let dataContent = clipData.getData('text/plain');\r\n    clipData.setData('text/plain', dataContent);\r\n    // let ele = event.target;\r\n    // ele.innerHTML += dataContent;\r\n    // console.log(dataContent);\r\n    // 不能去掉默认处理，否则不能ctrl+Z\r\n    // event.preventDefault();\r\n    event.stopPropagation();\r\n    // return true;\r\n  }\r\n\r\n  /**\r\n  * @private\r\n  *\r\n  * Fills the empty cell of the readonly area\r\n  * @param {HTMLElement} cell - empty cell\r\n  * added by xiaowy 2020/09/27\r\n  */\r\n  _fillReadOnlyCell(cell) {\r\n    // console.log('call _fillReadOnlyCell');\r\n    cell.classList.add(CSS.cell);\r\n    const content = this._createContentReadOnlyArea();\r\n\r\n    cell.appendChild(Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.area], null, [content]));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Fills the empty row with cells  in the size of numberOfColumns\r\n   * @param row = the empty row\r\n   */\r\n  _fillRow(row, isObjSep = false) {\r\n    // console.log('_fillRow:', this._numberOfColumns);\r\n    // console.log('this._objSepIndexColl', this._objSepIndexColl);\r\n    let cellConfig = { isObjSep: isObjSep, isWritable: true }\r\n    for (let i = 0; i < this._numberOfColumns; i++) {\r\n      const cell = row.insertCell();\r\n      if (i == 0 && this._firstColumnIsRead)\r\n        cellConfig.isWritable = false;\r\n      else\r\n        cellConfig.isWritable = true;\r\n      this._fillCell(cell, cellConfig);\r\n      // if (i === 0) {\r\n      //   this._fillReadOnlyCell(cell);\r\n      //   continue;\r\n      // }\r\n      // if (this._objSepIndexColl.indexOf(i) >= 0) {\r\n      //   // console.log('find!!!!!!---');\r\n      //   this._fillCell(cell, true);\r\n      // }\r\n      // else {\r\n      //   this._fillCell(cell);\r\n      // }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * hang necessary events\r\n   */\r\n  _hangEvents() {\r\n    this._table.addEventListener('focus', (event) => {\r\n      this._focusEditField(event);\r\n    }, true);\r\n\r\n    this._table.addEventListener('blur', (event) => {\r\n      this._blurEditField(event);\r\n    }, true);\r\n\r\n    this._table.addEventListener('keydown', (event) => {\r\n      this._pressedEnterInEditField(event);\r\n    });\r\n\r\n    this._table.addEventListener('click', (event) => {\r\n      this._clickedOnCell(event);\r\n    });\r\n\r\n    this._table.addEventListener('mouseover', (event) => {\r\n      this._mouseEnterInDetectArea(event);\r\n      event.stopPropagation();\r\n    }, true);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When you focus on an editable field, remembers the cell\r\n   * @param {FocusEvent} event\r\n   */\r\n  _focusEditField(event) {\r\n    // console.log('enter _focusEditField');\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      // console.log('enter _focusEditField11');\r\n      return;\r\n    }\r\n    this._selectedCell = event.target.closest('.' + CSS.cell);\r\n    if (!this._selectedCell) {\r\n      this._selectedCell = event.target.closest('.' + CSS.cellWithBorder);\r\n    }\r\n    // console.log('exit _focusEditField');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When you blur on an editable field, remembers the cell\r\n   * @param {FocusEvent} event\r\n   */\r\n  _blurEditField(event) {\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      return;\r\n    }\r\n    this._selectedCell = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When enter is pressed when editing a field\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  _pressedEnterInEditField(event) {\r\n    // let keycodes = [37, 38, 39, 40, 9]; // 9 is TAB\r\n    let keycodes = [38, 40, 9]; // 9 for tab key\r\n    let leftAndRight = [37, 39];\r\n    // console.log(event.keyCode);\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      return;\r\n    }\r\n    // if (event.keyCode === 13 && !event.shiftKey && !event.ctrlKey && !event.altKey) {\r\n    //   event.preventDefault();\r\n    // }\r\n    // 处理新需求，单元格跳转 xiaowy 2020/09/22\r\n    if ((keycodes.indexOf(event.keyCode) >= 0 || leftAndRight.indexOf(event.keyCode) >= 0) &&\r\n      !event.shiftKey && !event.ctrlKey && !event.altKey) {\r\n      console.log('in table ', event.keyCode);\r\n      // event.preventDefault();\r\n      // event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When clicking on a cell\r\n   * @param {MouseEvent} event\r\n   */\r\n  _clickedOnCell(event) {\r\n    if (!(event.target.classList.contains(CSS.cell) || event.target.classList.contains(CSS.cellWithBorder))) {\r\n      return;\r\n    }\r\n    const content = event.target.querySelector('.' + CSS.inputField);\r\n    content.focus();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When the mouse enters the detection area\r\n   * @param {MouseEvent} event\r\n   */\r\n  _mouseEnterInDetectArea(event) {\r\n    if (!event.target.classList.contains(CSS.area)) {\r\n      return;\r\n    }\r\n\r\n    const coordsCell = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"getCoords\"])(event.target.closest('TD'));\r\n    const side = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"getSideByCoords\"])(coordsCell, event.pageX, event.pageY);\r\n\r\n    event.target.dispatchEvent(new CustomEvent('mouseInActivatingArea', {\r\n      'detail': {\r\n        'side': side\r\n      },\r\n      'bubbles': true\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * get row cells objects pair\r\n   * @param {Array} cells: cells array(length is 2)\r\n   * @return {Array}: [key, value]\r\n   */\r\n  _getObjectFromCells(cells) {\r\n    if (cells.length < 2) {\r\n      console.log('cells lenth must equals 2');\r\n      return ['', ''];\r\n    }\r\n    const cols = Array.from(cells);\r\n    const inputs = cols.map(cell => cell.querySelector('.' + CSS.inputField));\r\n    // console.log('getJsonResult inputs:', inputs);\r\n    // 处理空的div\r\n    // let divs = inputs.map(input1 => input1.querySelector('div'));\r\n    // divs.map((div1) => {\r\n    //   if ((div1 !== null) && div1.innerHTML.trim().length == 0) {\r\n    //     // let parent = div1.parentElement;\r\n    //     // parent.removeChild(div1);\r\n    //     div1.remove();\r\n    //   }\r\n    // });\r\n    let tempInput = inputs[1].cloneNode(true);\r\n    let afterProcessNode = this._processWordContent(tempInput);\r\n    // let content = inputs[1].innerHTML.trim();\r\n    let content = afterProcessNode.innerHTML.trim();\r\n    // let b = content.replaceAll('<br>', '\\n');\r\n    // const regrexa = /<div>|<\\/div>/gi;\r\n    const regrexa = /<br>|<\\/div>/gi;\r\n    let a = content.replace(regrexa, '');\r\n    // const regrex = /<br>/gi;\r\n    const regrex = /<div>/gi;\r\n    let b = a.replace(regrex, '\\r');\r\n    const regrexall = /<br>|<\\/div>|<div>/gi;\r\n    const regrexone = /<br>|<\\/div>/gi;\r\n    let inputs0 = inputs[0].innerHTML.trim();\r\n    let keyOne = inputs0.replace(regrexone, '');\r\n    const regrexTwo = /<div>/gi;\r\n    let key = keyOne.replace(regrexTwo, '\\r');\r\n    // console.log('_getObjectFromCells', [key, b]);\r\n    return [key, b];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理word那边来的内容，会包含很多p和span\r\n   */\r\n  _processWordContent(node) {\r\n    // console.log('_processWordContent', node);\r\n    let pLists = node.querySelectorAll('p');\r\n    let contentsList = [];\r\n    if (pLists) {\r\n      for (let i = 0; i < pLists.length; i++) {\r\n        let p = pLists[i]\r\n        let textContent = p.innerText;\r\n        // contentsList.push(textContent);\r\n        // node.removeChild(p);\r\n        if (i === 0) {\r\n          let div = document.createTextNode(textContent);\r\n          p.parentNode.replaceChild(div, p);\r\n          // node.appendChild(div);\r\n        }\r\n        else {\r\n          let div = document.createElement('div');\r\n          div.innerText = textContent;\r\n          // node.appendChild(div);\r\n          p.parentNode.replaceChild(div, p);\r\n        }\r\n      }\r\n      // for (let j = 0; j < contentsList.length; j++) {\r\n      //   if (j === 0) {\r\n      //     let div = document.createTextNode(contentsList[j]);\r\n      //     node.appendChild(div);\r\n      //   }\r\n      //   else {\r\n      //     let div = document.createElement('div');\r\n      //     div.innerText = contentsList[j];\r\n      //     node.appendChild(div);\r\n      //   }\r\n      // }\r\n    }\r\n    return node;\r\n  }\r\n  /**\r\n   * @public\r\n   * Get the json object for this table\r\n   * column 0 is the key and column 1 is the value\r\n   * @return {Array}\r\n   */\r\n  getJsonResult() {\r\n    let rows = this._table.rows;\r\n    let listResults = [];\r\n    let modelParaObj = {};\r\n    let ret = this._tableIsRpeat();\r\n    // todo：判断表格是否符合repeat规范 xiaowy 2020/10/19\r\n    // if (!this._checkTableFormat(ret.isRepeat)) {\r\n    //   alert('造型的对象名称不符合规范，请检查！');\r\n    //   return [];\r\n    // }\r\n    // 找出重复对象名中的第一个单词\r\n    let firstRepeatWord = ''\r\n    let repeatCnt = 0;\r\n    if (ret.isRepeat) {\r\n      // console.log('repeatWords', ret.repeatWords);\r\n      let wordsColl = ret.repeatWords.trim().split(' ');\r\n      firstRepeatWord = wordsColl[0];\r\n      repeatCnt = wordsColl.length;\r\n      // console.log('repeatWordscnt', repeatCnt);\r\n    }\r\n    // console.log('table getJsonResult repeat ret:', ret, repeatCnt);\r\n    if (ret.isRepeat) {\r\n      for (let j = 0; j < rows.length; j += repeatCnt) {\r\n        let emptyCnt = 0;\r\n        // let childResults = []; // child repeat objects collect\r\n        for (let k = j; k < j + repeatCnt; k++) {\r\n          let cells = rows[k].cells;\r\n          let cell1 = cells[1];\r\n          let temp = cell1.querySelector('.' + CSS.inputField);\r\n          if (temp.innerHTML.trim().length === 0) {\r\n            emptyCnt++;\r\n          }\r\n          let retObj = this._getObjectFromCells(cells);\r\n          if (retObj[0].length > 0) {\r\n            modelParaObj[retObj[0]] = retObj[1];\r\n          }\r\n        }\r\n        if (emptyCnt < repeatCnt) {\r\n          listResults.push(modelParaObj);\r\n        }\r\n        modelParaObj = {};\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 0; i < rows.length; i++) {\r\n        // let jsonCells = JSON.parse(JSON.stringify(rows[i].cells));\r\n        // console.log('jsoncells',jsonCells);\r\n        let cells = rows[i].cells;\r\n        // let cells = jsonCells;\r\n        // 预处理\r\n        // this._preProcessTableCell(cells);\r\n        // console.log(cells);\r\n        // const cols = Array.from(cells);\r\n        // const inputs = cols.map(cell => cell.querySelector('.' + CSS.inputField));\r\n        // // console.log('getJsonResult inputs:', inputs);\r\n        // // 处理空的div\r\n        // // let divs = inputs.map(input1 => input1.querySelector('div'));\r\n        // // divs.map((div1) => {\r\n        // //   if ((div1 !== null) && div1.innerHTML.trim().length == 0) {\r\n        // //     // let parent = div1.parentElement;\r\n        // //     // parent.removeChild(div1);\r\n        // //     div1.remove();\r\n        // //   }\r\n        // // });\r\n        // let content = inputs[1].innerHTML.trim();\r\n        // // let b = content.replaceAll('<br>', '\\n');\r\n        // // const regrexa = /<div>|<\\/div>/gi;\r\n        // const regrexa = /<br>|<\\/div>/gi;\r\n        // let a = content.replace(regrexa, '');\r\n        // // const regrex = /<br>/gi;\r\n        // const regrex = /<div>/gi;\r\n        // let b = a.replace(regrex, '\\r');\r\n        // const regrexall = /<br>|<\\/div>|<div>/gi;\r\n        // const regrexone = /<br>|<\\/div>/gi;\r\n        // let inputs0 = inputs[0].innerHTML.trim();\r\n        // let keyOne = inputs0.replace(regrexone, '');\r\n        // const regrexTwo = /<div>/gi;\r\n        // let key = keyOne.replace(regrexTwo, '\\r');\r\n        let retObj = this._getObjectFromCells(cells);\r\n        // 增加容错处理 xiaowy 2020/10/09\r\n        if (retObj[0].length > 0 && retObj[1].length > 0) {\r\n          modelParaObj[retObj[0]] = retObj[1];\r\n          // if (cells[0].classList.contains(CSS.cellWithBorder)) {\r\n\r\n          //   // modelParaObj[inputs[0].innerHTML] = b;\r\n          //   modelParaObj[key] = b;\r\n          //   // console.log('getJsonResult:', modelParaObj);\r\n          //   listResults.push(modelParaObj);\r\n          //   modelParaObj = {};\r\n          // }\r\n          // else if (ret.isRepeat) {\r\n          //   if (ret.isRepeat) {\r\n          //     if (key === firstRepeatWord && i > 0) {\r\n          //       listResults.push(modelParaObj);\r\n          //       modelParaObj = {};\r\n          //       modelParaObj[key] = b;\r\n          //     }\r\n          //     else {\r\n          //       modelParaObj[key] = b;\r\n          //     }\r\n          //   }\r\n          //   else {\r\n          //     // 增加容错处理 xiaowy 2020/10/09\r\n          //     modelParaObj[key] = b;\r\n          //     // if (key.length > 0) {\r\n          //     //   modelParaObj[key] = b;\r\n          //     // }\r\n          //     // console.log('getJsonResult1:', modelParaObj);\r\n          //   }\r\n        }\r\n      }\r\n      listResults.push(modelParaObj);\r\n      // console.log('after table getJsonResult:', listResults);\r\n      // return listResults;\r\n    }\r\n    return listResults;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * check whether table is repeat\r\n   * @param {nothing}\r\n   * @returns {boolean} @see checkFiledsIsRepeat\r\n   */\r\n  _tableIsRpeat() {\r\n    let rows = this._table.rows;\r\n    let listResults = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n      let cell = rows[i].cells[0];\r\n      let input = cell.querySelector('.' + CSS.inputField);\r\n      let key = input.innerHTML.trim();\r\n      listResults.push(key);\r\n    }\r\n    let ret = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"checkFiledsIsRepeat\"])(listResults.join(' '));\r\n    // console.log('_tableIsRpeat ret', ret);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * check table format correct\r\n   * @param {boolean} isRepeat: model object names is repeat\r\n   * @returns {boolean} true: correct, false: not correct\r\n   */\r\n  _checkTableFormat(isRepeat) {\r\n    if (this._repeat === 1) {\r\n      if (!isRepeat) {\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    }\r\n    else {\r\n      if (isRepeat) {\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * div预处理，清除不必要的div\r\n   * @param {HtmlTableElement Cell Array} cellsLists\r\n   */\r\n  _preProcessTableCell(cellsLists) {\r\n    const cols = Array.from(cellsLists);\r\n    const inputs = cols.map(cell => cell.querySelector('.' + CSS.inputField));\r\n    let divs = inputs.map(input1 => input1.querySelectorAll('div'));\r\n    // divs.forEach()\r\n    divs.forEach((div1) => {\r\n      // if (div1 !== null) {\r\n      //   console.log('remove11',div1.innerHTML);\r\n      // }\r\n      if (div1 !== null && div1 !== undefined) {\r\n        // let parent = div1.parentElement;\r\n        // parent.removeChild(div1);\r\n        if (div1.innerText !== undefined && div1.innerText.length == 0) {\r\n          div1.remove();\r\n        }\r\n        else {\r\n          div1.forEach(ele => {\r\n            if (ele.innerText !== undefined && ele.innerText.trim().length === 0 && ele.nextSibling === null) {\r\n              // if (div1.textContent.trim().length === 0) {\r\n              ele.remove();\r\n            }\r\n          });\r\n        }\r\n        // console.log('remove from:', div1.parentElement.innerHTML);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/table.js?");

/***/ }),

/***/ "./src/tableConstructor.js":
/*!*********************************!*\
  !*** ./src/tableConstructor.js ***!
  \*********************************/
/*! exports provided: TableConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TableConstructor\", function() { return TableConstructor; });\n/* harmony import */ var _styles_table_constructor_pcss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/table-constructor.pcss */ \"./src/styles/table-constructor.pcss\");\n/* harmony import */ var _styles_table_constructor_pcss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_table_constructor_pcss__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _documentUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./documentUtils */ \"./src/documentUtils.js\");\n/* harmony import */ var _borderToolBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./borderToolBar */ \"./src/borderToolBar.js\");\n/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./table */ \"./src/table.js\");\n/* harmony import */ var _tableReadOnly__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tableReadOnly */ \"./src/tableReadOnly.js\");\n/* harmony import */ var _modelHeadTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modelHeadTable */ \"./src/modelHeadTable.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CSS = {\r\n  editor: 'tc-editor',\r\n  toolBarHor: 'tc-toolbar--hor',\r\n  toolBarVer: 'tc-toolbar--ver',\r\n  inputField: 'tc-modelTable__inp',\r\n  readOnlyTable_inputField: 'tc-readOnlyTable__inp', // for readOnlyTable\r\n  // headTable_inputField:'tc-headTable__inp'\r\n};\r\n\r\n/**\r\n * Entry point. Controls table and give API to user\r\n */\r\nclass TableConstructor {\r\n  /**\r\n   * Creates\r\n   * @param {TableData} data - previously saved data for insert in table\r\n   * @param {object} config - configuration of table\r\n   * @param {object} api - Editor.js API\r\n   */\r\n  constructor(data, config, api) {\r\n    // /** creating table */\r\n    // this._table = new Table();\r\n\r\n    // // }\r\n    // // end\r\n    // // add by xiaowy 同时融合单击和双击事件\r\n    // this._clickTimeId = -1;\r\n    // // end\r\n    // const size = this._resizeTable(data, config);\r\n\r\n    // this._fillTable(data, size);\r\n\r\n    // this._makeModelNameTitle(data);\r\n\r\n    // /** creating container around table */\r\n    // // modified by xiaowy\r\n    // // this._container = create('div', [CSS.editor, api.styles.block], null, [this._table.htmlElement]);\r\n    // // added by xiaowy 2020/09/21\r\n    // // this._readOnlyTable = new TableReadOnly();\r\n    // this._makeReadOnlyTable();\r\n    // this._isReadOnlyTableVisible(data);\r\n    // let tablebr = document.createElement('br');\r\n    // // end\r\n    // this._makeModelHeadTable();\r\n    // // console.log('after _makeModelHeadTable');\r\n    // this._container = create('div', [CSS.editor, api.styles.block], null, [this._titleWrapper, this._modelHeadTable.htmlElement, this._readOnlyTable.htmlElement, this._table.htmlElement, tablebr]);\r\n    // // this._container = create('div', [CSS.editor, api.styles.block], null, [this._titleWrapper, this._readOnlyTable.htmlElement, this._table.htmlElement, tablebr]);\r\n    // // this._container = create('div', [CSS.editor, api.styles.block], null, [this._title, this._table.htmlElement]);\r\n\r\n    // /** creating ToolBars */\r\n    // this._verticalToolBar = new VerticalBorderToolBar();\r\n    // this._horizontalToolBar = new HorizontalBorderToolBar();\r\n    // this._table.htmlElement.appendChild(this._horizontalToolBar.htmlElement);\r\n    // this._table.htmlElement.appendChild(this._verticalToolBar.htmlElement);\r\n\r\n    // /** Activated elements */\r\n    // this._hoveredCell = null;\r\n    // this._activatedToolBar = null;\r\n    // this._hoveredCellSide = null;\r\n\r\n    // /** Timers */\r\n    // this._plusButDelay = null;\r\n    // this._toolbarShowDelay = null;\r\n\r\n    // this._hangEvents();\r\n    this._api = api; // add by xiaowy\r\n\r\n    let _innerData = this._cdrJsonConvert(data);\r\n    this._repeat = _innerData.Repeat; // add by xiaowy whether can add table parameter\r\n    // console.log('repeat:', this._repeat);\r\n    this._repeatWordsColl = [];\r\n    this._makeModelTables(_innerData, config);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * find model thumb from chenhuaan interface\r\n   * \r\n   */\r\n  _getModelThumbFromParent(data) {\r\n    if (window.mmxaiGetAllModelList !== undefined && data.name !== undefined) {\r\n      try {\r\n        // console.log('enter _getModelThumbFromParent');\r\n        let retArr = window.mmxaiGetAllModelList();\r\n        console.log('mmxaiGetAllModelList', retArr);\r\n        if (retArr) {\r\n          let find = retArr.find((item) => {\r\n            return item.Name === data.name;\r\n          })\r\n          if (find !== undefined) {\r\n            // console.log('find model thumb', data.name);\r\n            // data.imgByteStr = find.imgByteStr;\r\n            data.Thumb = find.Thumb;\r\n            data.Repeat = find.Repeat; // 表示是否可以增加表格参数！！！ 2020/10/07\r\n          }\r\n          else {\r\n            console.log('not find model thumb', data.name);\r\n          }\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log('error', e);\r\n      }\r\n      console.log('exit _getModelThumbFromParent');\r\n      // retArr.forEach((item, index) => {\r\n      //   if (item.Name === data.name) {\r\n      //     console.log('find model thumb', data.name);\r\n      //     data.imgByteStr = item.imgByteStr;\r\n      //     console.log('after ')\r\n      //     return;\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * json数据转换\r\n   * 从cdr的json到内部json\r\n   */\r\n  _cdrJsonConvert(data) {\r\n    console.log('cdrData ', data)\r\n    let cdrData = undefined;\r\n    let _innerData = {};\r\n    for (let prop in data) {\r\n      if (data.hasOwnProperty(prop)) {\r\n        console.log('first cdrData1', data[prop]);\r\n        cdrData = Object.assign({}, data[prop]);\r\n        console.log('first cdrData', cdrData);\r\n        _innerData.name = prop;\r\n        break;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // if (cdrData.name) {\r\n    //   _innerData.name = cdrData.name;\r\n    // }\r\n    // console.log(cdrData['板块头']);\r\n    if (cdrData === undefined) {\r\n      return _innerData;\r\n    }\r\n    this._getModelThumbFromParent(_innerData);\r\n    console.log('after _getModelThumbFromParent', _innerData);\r\n    if (cdrData['板块头'] && cdrData['板块头']['标题']) {\r\n      _innerData.innerTitle = cdrData['板块头']['标题'];\r\n    }\r\n\r\n    if (cdrData['属性'] !== undefined) {\r\n      _innerData.Tags = cdrData['属性'];\r\n    }\r\n\r\n    // console.log(cdrData['列表']);\r\n    if (cdrData['列表']) {\r\n      _innerData['content'] = [];\r\n      // 对象分隔符，要对应具体的行号\r\n      _innerData['contentSeprateIndex'] = [];\r\n      let arr = cdrData['列表'];\r\n      // todo:处理列表中有多个对象的问题\r\n      if (Array.isArray(arr)) {\r\n        let repeatRowIndex = 0;\r\n        let isRepeat = this._checkModelParaListsIsRepeat(arr);\r\n        if (isRepeat) {\r\n          _innerData.Repeat = 1;\r\n        }\r\n        arr.forEach((item, index) => {\r\n          // console.log('item:', item);\r\n          for (let prop in item) {\r\n            if (item.hasOwnProperty(prop)) {\r\n              let rowArr = [];\r\n              // console.log('prop:', item[prop])\r\n              rowArr.push(prop);\r\n              rowArr.push(item[prop]);\r\n              // console.log('_cdrJsonConvert', rowArr);\r\n              _innerData['content'].push(rowArr);\r\n              repeatRowIndex++;\r\n            }\r\n          }\r\n          if (isRepeat && repeatRowIndex > 0 && index < arr.length - 1) {\r\n            let temp = repeatRowIndex - 1;\r\n            _innerData['contentSeprateIndex'].push(temp);\r\n          }\r\n\r\n        });\r\n      }\r\n    }\r\n    console.log('_innerData:', _innerData);\r\n    return _innerData;\r\n  }\r\n\r\n  /**\r\n   * check model parameter list is repeat!\r\n   * @param {Array} paraList\r\n   * @return {Boolean} true: is repeat, false: not repeat\r\n   */\r\n  _checkModelParaListsIsRepeat(paraList) {\r\n    // console.log('enter _checkModelParaListsIsRepeat')\r\n    if (Array.isArray(paraList)) {\r\n      let objNamesColl = '';\r\n      paraList.forEach((item, index) => {\r\n        for (let prop in item) {\r\n          if (item.hasOwnProperty(prop)) {\r\n            objNamesColl += prop + ' ';\r\n          }\r\n        }\r\n      });\r\n      // console.log('_checkModelParaListsIsRepeat11', );\r\n      let ret = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"checkFiledsIsRepeat\"])(objNamesColl.trim());\r\n      if (ret.isRepeat) {\r\n        this._repeatWordsColl = ret.repeatWords.trim().split(' ');\r\n      }\r\n      // console.log('_checkModelParaListsIsRepeat', ret);\r\n      return ret.isRepeat;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Initial para table toolbar and event process\r\n   * @returns {none}\r\n   */\r\n  _initToolBarAndEvent() {\r\n    /** creating ToolBars */\r\n    if (this._repeat !== undefined && this._repeat === 1 && this._verticalToolBar === undefined) {\r\n      // 不再需要工具栏添加行了--xiaowy 2020/10/20\r\n      // this._verticalToolBar = new VerticalBorderToolBar();\r\n      // this._horizontalToolBar = new HorizontalBorderToolBar();\r\n      // this._table.htmlElement.appendChild(this._horizontalToolBar.htmlElement);\r\n      // this._table.htmlElement.appendChild(this._verticalToolBar.htmlElement);\r\n      this._verticalToolBar = undefined;\r\n      this._horizontalToolBar = undefined;\r\n      // 不再需要工具栏添加行了 end\r\n      /** Activated elements */\r\n      this._hoveredCell = null;\r\n      this._activatedToolBar = null;\r\n      this._hoveredCellSide = null;\r\n\r\n      /** Timers */\r\n      this._plusButDelay = null;\r\n      this._toolbarShowDelay = null;\r\n\r\n      // this._hangEvents();\r\n    }\r\n    this._hangEvents();\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 生成造型组件的所有表格，包含造型头，readOnlyTable, para table 和 toolbar；\r\n   * 1、如果不是从构造函数调用来的，要先把this._contaier remove\r\n   * 然后再构建readOnlyTable, para table 和 toolbar，并依次append；\r\n   * todo:\r\n   * 1、实现json适配\r\n   * 2、实现用户选择\r\n   */\r\n\r\n  _makeModelTables(data, config = null, fromContructor = true) {\r\n    let dataNotEmpty = false;\r\n    // add by xiaowy 同时融合单击和双击事件\r\n    this._clickTimeId = -1;\r\n    if (config === null || config === undefined) {\r\n      config = { rows: '1', cols: '2' };\r\n    }\r\n    for (let prop in data) {\r\n      if (data.hasOwnProperty(prop)) {\r\n        dataNotEmpty = true;\r\n        break;\r\n      }\r\n    }\r\n    try {\r\n      if (dataNotEmpty && fromContructor) { // 初始化构造\r\n        this._makeModelNameTitle(data); // 造型标题\r\n        // console.log('after _makeModelNameTitle');\r\n        this._makeModelHeadTable(data); // 造型头\r\n        // console.log('after _makeModelHeadTable');\r\n        this._makeReadOnlyTable(); // 造型表格头\r\n        // console.log('after _makeReadOnlyTable');\r\n        // 造型表格和其他组件的换行\r\n        // 具体的造型参数\r\n        this._table = new _table__WEBPACK_IMPORTED_MODULE_3__[\"Table\"]();\r\n        this._table.repeat = this._repeat;\r\n        // if (this._repeat === -1) {\r\n        //   this._table.firstColumnIsRead = false;\r\n        // }\r\n        const size = this._resizeTable(data, config);\r\n\r\n        this._fillTable(data, size);\r\n        // let tablebr = document.createElement('br');\r\n        // 构建造型容器\r\n        // this._container = create('div', [CSS.editor, this._api.styles.block], null, [this._titleWrapper, this._modelHeadTable.htmlElement, this._readOnlyTable.htmlElement, this._table.htmlElement, tablebr]);\r\n        this._container = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"create\"])('div', [CSS.editor, this._api.styles.block], null, [this._titleWrapper, this._modelHeadTable.htmlElement, this._readOnlyTable.htmlElement, this._table.htmlElement]);\r\n        // this._container = create('div', [CSS.editor, api.styles.block], null, [this._titleWrapper, this._readOnlyTable.htmlElement, this._table.htmlElement, tablebr]);\r\n        // this._container = create('div', [CSS.editor, api.styles.block], null, [this._title, this._table.htmlElement]);\r\n        this._initToolBarAndEvent();\r\n\r\n      }\r\n      else if (!dataNotEmpty && fromContructor) { // 如果没有具体的造型参数数据，一般是新建造型\r\n        this._makeModelNameTitle(data); // 造型标题\r\n        this._makeModelHeadTable(data); // 造型头\r\n        this._table = new _table__WEBPACK_IMPORTED_MODULE_3__[\"Table\"]();\r\n        const size = this._resizeTable(data, config);\r\n        this._makeReadOnlyTable(); // 造型表格头\r\n        this._repeat = 1;\r\n        this._table.repeat = this._repeat;\r\n        this._table.firstColumnIsRead = false; // to do 这里以后要注释掉\r\n        this._container = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"create\"])('div', [CSS.editor, this._api.styles.block], null, [this._titleWrapper, this._modelHeadTable.htmlElement, this._readOnlyTable.htmlElement, this._table.htmlElement]);\r\n        this._initToolBarAndEvent();\r\n      }\r\n      else if (dataNotEmpty && !fromContructor) {\r\n        /**\r\n         * 这里要实现用户选择具体造型的情况\r\n         */\r\n        if (this._readOnlyTable === undefined) {\r\n          this._makeReadOnlyTable();\r\n          this._container.appendChild(this._readOnlyTable.htmlElement)\r\n        }\r\n        this._repeat = data.Repeat;\r\n        // 如果造型名称相同则不重构参数表 2020/10/07\r\n        if (data.Name.trim() !== this._modelHeadTable.modelTypeName) {\r\n          this._recontructParaTable(data);\r\n          // 这里会重复注册事件处理，导致注册事件会处理两次\r\n          // this._initToolBarAndEvent();\r\n        }\r\n      }\r\n      else {\r\n        console.log('not implemented!');\r\n      }\r\n    } catch (e) {\r\n      console.log('_makeModelTables', e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 设置参数表头readOnlyTable是否可见\r\n   * @param {Object} data: 造型参数数据集合\r\n   */\r\n  _isReadOnlyTableVisible(data) {\r\n    console.log(\"_isReadOnlyTableVisible:\", data);\r\n    let dataNotEmpty = false;\r\n    for (let prop in data) {\r\n      if (data.hasOwnProperty(prop)) {\r\n        dataNotEmpty = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!dataNotEmpty) {\r\n      this._readOnlyTable.htmlElement.classList.remove('mmxReadOnlyTableVisible');\r\n      this._readOnlyTable.htmlElement.classList.add('mmxReadOnlyTableInvisible');\r\n    }\r\n    else {\r\n      this._readOnlyTable.htmlElement.classList.remove('mmxReadOnlyTableInvisible');\r\n      this._readOnlyTable.htmlElement.classList.add('mmxReadOnlyTableVisible');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 构造造型大标题\r\n   */\r\n  _makeModelNameTitle(data) {\r\n    // add by xiaowy 增加参数说明 2020/09/19,造型不需要增加注解\r\n    // if (data && data.title) {\r\n    this._titleWrapper = document.createElement('div');\r\n    this._descTitle = document.createElement('H3');\r\n    // let name = undefined;\r\n    // for (prop in data) {\r\n    //   if (data.hasOwnProperty(prop)){\r\n    //     name = prop;\r\n    //     break;\r\n    //   }\r\n    // }\r\n    if (data.name !== undefined) {\r\n      this._descTitle.innerHTML = '【' + '造型-' + data.name + '】';\r\n      // this._descTitle.innerHTML = data.name;\r\n    }\r\n    else {\r\n      this._descTitle.innerHTML = '【造型】';\r\n    }\r\n    this._descTitle.classList.add('mmxModelDecsTitle');\r\n    // this._descTitle.appendChild(document.createElement('br'));\r\n    this._titleWrapper.appendChild(this._descTitle);\r\n    this._titleWrapper.appendChild(document.createElement('br'));\r\n  }\r\n\r\n  /**\r\n   * 构建只读的table，只有一行和两列，为了和后面构建的参数table兼容，改造了原有的Table类\r\n   * xiaowy 2020/09/21\r\n   */\r\n  _makeReadOnlyTable() {\r\n    // overwrite config\r\n    let config = { rows: '1', cols: '2' };\r\n    this._readOnlyTable = new _tableReadOnly__WEBPACK_IMPORTED_MODULE_4__[\"TableReadOnly\"]();\r\n    // let data = { content: [['元素名称', '内容']] };\r\n    let data = { content: [['对象', '内容']] };\r\n    const size = this._resizeReadOnlyTable(data, config);\r\n\r\n    this._fillReadOnlyTable(data, size);\r\n\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 构建造型的表头\r\n   * xiaowy 2020/09/21\r\n   */\r\n  _makeModelHeadTable(data) {\r\n    // overwrite config\r\n    // let config = { rows: '1', cols: '2' };\r\n    this._modelHeadTable = new _modelHeadTable__WEBPACK_IMPORTED_MODULE_5__[\"ModelHeadTable\"](data, this._getModelDataFromDbDemo());\r\n\r\n  }\r\n\r\n  /**\r\n   * returns html element of TableConstructor;\r\n   * @return {HTMLElement}\r\n   */\r\n  get htmlElement() {\r\n    return this._container;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   *  Fill table data passed to the constructor\r\n   * @param {TableData} data - data for insert in table\r\n   * @param {{rows: number, cols: number}} size - contains number of rows and cols\r\n   * \r\n   */\r\n  _fillTable(data, size) {\r\n    if (data.content !== undefined) {\r\n      for (let i = 0; i < size.rows && i < data.content.length; i++) {\r\n        for (let j = 0; j < size.cols && j < data.content[i].length; j++) {\r\n          // get current cell and her editable part\r\n          const input = this._table.body.rows[i].cells[j].querySelector('.' + CSS.inputField);\r\n          // 处理回车换行\r\n          let content = data.content[i][j];\r\n          // console.log('content', content);\r\n          // console.log(\"replaceAll\", content.replaceAll);\r\n          // let b = content.replaceAll('\\n', '<br/>');\r\n          const regrex = /[\\r|\\n]/gi;\r\n          // let b = content.replace(regrex, '<br/>');\r\n          let b = content.replace(regrex, '<div><\\/div>');\r\n          // console.log(\"content11\", b);\r\n          input.innerHTML = b;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   *  Fill Read only table data passed to the constructor\r\n   * @param {TableData} data - data for insert in table\r\n   * @param {{rows: number, cols: number}} size - contains number of rows and cols\r\n   * 仿照_fillTable而来，只是换成了操作_readOnlyTable\r\n   */\r\n  _fillReadOnlyTable(data, size) {\r\n    if (data.content !== undefined) {\r\n      for (let i = 0; i < size.rows && i < data.content.length; i++) {\r\n        for (let j = 0; j < size.cols && j < data.content[i].length; j++) {\r\n          // get current cell and her editable part\r\n          const input = this._readOnlyTable.body.rows[i].cells[j].querySelector('.' + CSS.readOnlyTable_inputField);\r\n\r\n          input.innerHTML = data.content[i][j];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @private\r\n  *\r\n  * resize to match config or transmitted data\r\n  * @param {TableData} data - data for inserting to the table\r\n  * @param {object} config - configuration of table\r\n  * @param {number|string} config.rows - number of rows in configuration\r\n  * @param {number|string} config.cols - number of cols in configuration\r\n  * @return {{rows: number, cols: number}} - number of cols and rows\r\n  */\r\n  _resizeTable(data, config) {\r\n    // console.log('_resizeTable', data.contentSeprateIndex);\r\n    const isValidArray = Array.isArray(data.content);\r\n    const isNotEmptyArray = isValidArray ? data.content.length : false;\r\n    const contentRows = isValidArray ? data.content.length : undefined;\r\n    const contentCols = isNotEmptyArray ? data.content[0].length : undefined;\r\n    const parsedRows = Number.parseInt(config.rows);\r\n    const parsedCols = Number.parseInt(config.cols);\r\n    // value of config have to be positive number\r\n    const configRows = !isNaN(parsedRows) && parsedRows > 0 ? parsedRows : undefined;\r\n    const configCols = !isNaN(parsedCols) && parsedCols > 0 ? parsedCols : undefined;\r\n    /*\r\n    ** 默认只有一行2列 xiaowy 2020/09/21 **\r\n    const defaultRows = 2;\r\n    const defaultCols = 2;\r\n    */\r\n    const defaultRows = 1;\r\n    const defaultCols = 2;\r\n    const rows = contentRows || configRows || defaultRows;\r\n    const cols = contentCols || configCols || defaultCols;\r\n    // contentSeprateIndexColl = data.contentSeprateIndex;\r\n    // console.log('set objSepIndexColl');\r\n    this._table.objSepIndexColl = data.contentSeprateIndex;\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      // if (contentSeprateIndexColl.indexOf() > -1) {\r\n      //   this._table.addRow(-1, true);\r\n      // }\r\n      // else {\r\n      //   this._table.addRow();\r\n      // }\r\n      this._table.addRow();\r\n    }\r\n    for (let i = 0; i < cols; i++) {\r\n      this._table.addColumn();\r\n    }\r\n\r\n    // console.log({\r\n    //   rows: rows,\r\n    //   cols: cols\r\n    // });\r\n\r\n    return {\r\n      rows: rows,\r\n      cols: cols\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * resize to match config or transmitted data\r\n   * @param {TableData} data - data for inserting to the table\r\n   * @param {object} config - configuration of table\r\n   * @param {number|string} config.rows - number of rows in configuration\r\n   * @param {number|string} config.cols - number of cols in configuration\r\n   * @return {{rows: number, cols: number}} - number of cols and rows\r\n   * 构建table的标题头，参照_resizeTable，只是数据是固定的 xiaowy 2020/09/21\r\n   */\r\n  _resizeReadOnlyTable(data, config) {\r\n    const isValidArray = Array.isArray(data.content);\r\n    const isNotEmptyArray = isValidArray ? data.content.length : false;\r\n    const contentRows = isValidArray ? data.content.length : undefined;\r\n    const contentCols = isNotEmptyArray ? data.content[0].length : undefined;\r\n    const parsedRows = Number.parseInt(config.rows);\r\n    const parsedCols = Number.parseInt(config.cols);\r\n    // value of config have to be positive number\r\n    const configRows = !isNaN(parsedRows) && parsedRows > 0 ? parsedRows : undefined;\r\n    const configCols = !isNaN(parsedCols) && parsedCols > 0 ? parsedCols : undefined;\r\n    /*\r\n    ** 默认只有一行 xiaowy 2020/09/21 **\r\n    const defaultRows = 2;\r\n    const defaultCols = 2;\r\n    */\r\n    const defaultRows = 1;\r\n    const defaultCols = 2;\r\n    const rows = contentRows || configRows || defaultRows;\r\n    const cols = contentCols || configCols || defaultCols;\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      this._readOnlyTable.addRow();\r\n    }\r\n    for (let i = 0; i < cols; i++) {\r\n      this._readOnlyTable.addColumn();\r\n    }\r\n\r\n    return {\r\n      rows: rows,\r\n      cols: cols\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Show ToolBar\r\n   * @param {BorderToolBar} toolBar - which toolbar to show\r\n   * @param {number} coord - where show. x or y depending on the grade of the toolbar\r\n   */\r\n  _showToolBar(toolBar, coord) {\r\n    if (toolBar !== undefined) {\r\n      this._hideToolBar();\r\n      this._activatedToolBar = toolBar;\r\n      toolBar.showIn(coord);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Hide all of toolbars\r\n   */\r\n  _hideToolBar(event) {\r\n    if (this._activatedToolBar !== null && this._activatedToolBar !== undefined) {\r\n      this._activatedToolBar.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * hang necessary events\r\n   */\r\n  _hangEvents() {\r\n    this._container.addEventListener('mouseInActivatingArea', (event) => {\r\n      this._toolbarCalling(event);\r\n    });\r\n    // this._container.addEventListener('mouseInActivatingArea', this._toolbarCalling);\r\n    /* 去掉工具栏添加行功能 xiaowy 2020/10/20\r\n    if (this._repeat !== undefined && this._repeat === 1) {\r\n      this._container.addEventListener('click', (event) => {\r\n        // added by xiaowy 2020/09/19\r\n        clearTimeout(this._clickTimeId);\r\n        let that = this;\r\n        this._clickTimeId = setTimeout(function () {\r\n          that._clickToolbar(event);\r\n        }, 250);\r\n        // end\r\n        // this._clickToolbar(event);\r\n      });\r\n\r\n      // add by xiaowy test double click event 2020/09/19\r\n      this._container.addEventListener('dblclick', (event) => {\r\n        clearTimeout(this._clickTimeId);\r\n        // console.log('doubleclick event!');\r\n        this._dblclickToolbar(event);\r\n        // alert('doubleclick event!');\r\n      });\r\n    }\r\n    */\r\n\r\n    this._container.addEventListener('input', (event) => {\r\n      this._hideToolBar(event);\r\n    });\r\n    // this._container.addEventListener('input', this._hideToolBar);\r\n\r\n    this._container.addEventListener('keydown', (event) => {\r\n      this._containerKeydown(event);\r\n    });\r\n    // this._container.addEventListener('keydown', this._containerKeydown);\r\n\r\n    this._container.addEventListener('mouseout', (event) => {\r\n      this._leaveDetectArea(event);\r\n    });\r\n    // this._container.addEventListener('mouseout', this._leaveDetectArea);\r\n\r\n    this._container.addEventListener('mouseover', (event) => {\r\n      this._mouseEnterInDetectArea(event);\r\n    });\r\n\r\n    this._container.addEventListener('dblclick', (event) => {\r\n      this._processDbClick(event);\r\n    });\r\n    // this._container.addEventListener('mouseover', this._mouseEnterInDetectArea);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * remove component events\r\n   * @param {nothing}\r\n   */\r\n  _removeAllEvent() {\r\n    this._container.removeEventListener('mouseInActivatingArea', this._toolbarCalling);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * detects a mouseenter on a special area\r\n   * @param {MouseEvent} event\r\n   */\r\n  _mouseInActivatingAreaListener(event) {\r\n    this._hoveredCellSide = event.detail.side;\r\n    const areaCoords = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getCoords\"])(event.target);\r\n    const containerCoords = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getCoords\"])(this._table.htmlElement);\r\n\r\n    this._hoveredCell = event.target.closest('TD');\r\n\r\n    if (this._hoveredCell === null) {\r\n      const paddingContainer = 11;\r\n      this._hoveredCell = this._container;\r\n      areaCoords.x1 += paddingContainer;\r\n      areaCoords.y1 += paddingContainer;\r\n      areaCoords.x2 -= paddingContainer;\r\n      areaCoords.y2 -= paddingContainer;\r\n    }\r\n    /* 不需要工具栏添加行了 xiaowy 2020/10/20\r\n    if (this._hoveredCellSide === 'top') {\r\n      this._showToolBar(this._horizontalToolBar, areaCoords.y1 - containerCoords.y1 - 2);\r\n    }\r\n    if (this._hoveredCellSide === 'bottom') {\r\n      this._showToolBar(this._horizontalToolBar, areaCoords.y2 - containerCoords.y1 - 1);\r\n    }\r\n    */\r\n    /* \r\n    ** 不需要增加列，秒秒学AI默认就2列  comment by xiaowy 2020/09/19\r\n    if (this._hoveredCellSide === 'left') {\r\n      this._showToolBar(this._verticalToolBar, areaCoords.x1 - containerCoords.x1 - 2);\r\n    }\r\n    if (this._hoveredCellSide === 'right') {\r\n      this._showToolBar(this._verticalToolBar, areaCoords.x2 - containerCoords.x1 - 1);\r\n    }\r\n    */\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Checks elem is toolbar\r\n   * @param {HTMLElement} elem - element\r\n   * @return {boolean}\r\n   */\r\n  _isToolbar(elem) {\r\n    // add by xiaowy 2020/09/21\r\n    if (elem === null) {\r\n      return null;\r\n    }\r\n    return !!(elem.closest('.' + CSS.toolBarHor) || elem.closest('.' + CSS.toolBarVer));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Hide toolbar, if mouse left area\r\n   * @param {MouseEvent} event\r\n   */\r\n  _leaveDetectArea(event) {\r\n    if (this._isToolbar(event.relatedTarget)) {\r\n      return;\r\n    }\r\n    clearTimeout(this._toolbarShowDelay);\r\n    this._hideToolBar();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Show toolbar when mouse in activation area\r\n   * Showing\r\n   * @param {MouseEvent} event\r\n   */\r\n  _toolbarCalling(event) {\r\n    if (this._isToolbar(event.target)) {\r\n      return;\r\n    }\r\n    clearTimeout(this._toolbarShowDelay);\r\n    this._toolbarShowDelay = setTimeout(() => {\r\n      this._mouseInActivatingAreaListener(event);\r\n    }, 125);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * handling clicks on toolbars\r\n   * @param {MouseEvent} event\r\n   */\r\n  _clickToolbar(event) {\r\n    if (!this._isToolbar(event.target)) {\r\n      return;\r\n    }\r\n    let typeCoord;\r\n\r\n    if (this._activatedToolBar === this._horizontalToolBar) {\r\n      this._addRow();\r\n      typeCoord = 'y';\r\n    } else {\r\n      // comment by xiaowy 2020/09/19 不需要处理列\r\n      // this._addColumn();\r\n      typeCoord = 'x';\r\n      // return; // added by xiaowy 2020/09/19\r\n    }\r\n    /** If event has transmitted data (coords of mouse) */\r\n    const detailHasData = isNaN(event.detail) && event.detail !== null;\r\n\r\n    if (detailHasData) {\r\n      const containerCoords = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getCoords\"])(this._table.htmlElement);\r\n      let coord;\r\n\r\n      if (typeCoord === 'x') {\r\n        coord = event.detail.x - containerCoords.x1;\r\n      } else {\r\n        coord = event.detail.y - containerCoords.y1;\r\n      }\r\n      this._delayAddButtonForMultiClickingNearMouse(coord);\r\n    } else {\r\n      this._hideToolBar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * handling double clicks on toolbars\r\n   * @param {MouseEvent} event\r\n   */\r\n  _dblclickToolbar(event) {\r\n    if (!this._isToolbar(event.target)) {\r\n      return;\r\n    }\r\n    let typeCoord;\r\n\r\n    if (this._activatedToolBar === this._horizontalToolBar) {\r\n      this._delRow();\r\n      typeCoord = 'y';\r\n    } else {\r\n      // comment by xiaowy 2020/09/19 不需要处理列\r\n      // this._addColumn();\r\n      typeCoord = 'x';\r\n      // return; // added by xiaowy 2020/09/19\r\n    }\r\n    /** If event has transmitted data (coords of mouse) */\r\n    const detailHasData = isNaN(event.detail) && event.detail !== null;\r\n\r\n    if (detailHasData) {\r\n      const containerCoords = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getCoords\"])(this._table.htmlElement);\r\n      let coord;\r\n\r\n      if (typeCoord === 'x') {\r\n        coord = event.detail.x - containerCoords.x1;\r\n      } else {\r\n        coord = event.detail.y - containerCoords.y1;\r\n      }\r\n      this._delayAddButtonForMultiClickingNearMouse(coord);\r\n    } else {\r\n      this._hideToolBar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * detects button presses when editing a table's content\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  _containerKeydown(event) {\r\n    // let keycodes = [37, 38, 39, 40, 9]; // 9 for tab key\r\n    let keycodes = [38, 40, 9]; // 9 for tab key\r\n    // Todo: process chracter move\r\n    let leftAndRight = [37, 39];\r\n    if (event.keyCode === 13 && !event.shiftKey && !event.ctrlKey && !event.altKey) {\r\n      console.log('process enter key');\r\n      this._containerEnterPressed(event);\r\n    }\r\n    // 处理新需求，单元格跳转 xiaowy 2020/09/22\r\n    if ((keycodes.indexOf(event.keyCode) >= 0 || leftAndRight.indexOf(event.keyCode) >= 0) &&\r\n      !event.shiftKey && !event.ctrlKey && !event.altKey) {\r\n      console.log('in table constructor', event.keyCode);\r\n      this._containerArrowKeyPressed(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Leaves the PlusButton active under mouse\r\n   * The timer gives time to press the button again, before it disappears.\r\n   * While the button is being pressed, the timer will be reset\r\n   * @param {number} coord - coords of mouse. x or y depending on the grade of the toolbar\r\n   */\r\n  _delayAddButtonForMultiClickingNearMouse(coord) {\r\n    this._showToolBar(this._activatedToolBar, coord);\r\n    this._activatedToolBar.hideLine();\r\n    clearTimeout(this._plusButDelay);\r\n    this._plusButDelay = setTimeout(() => {\r\n      this._hideToolBar();\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Check if the addition is initiated by the container and which side\r\n   * @returns {number} - -1 for left or top; 0 for bottom or right; 1 if not container\r\n   */\r\n  _getHoveredSideOfContainer() {\r\n    if (this._hoveredCell === this._container) {\r\n      return this._isBottomOrRight() ? 0 : -1;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * check if hovered cell side is bottom or right. (lefter in array of cells or rows than hovered cell)\r\n   * @returns {boolean}\r\n   */\r\n  _isBottomOrRight() {\r\n    return this._hoveredCellSide === 'bottom' || this._hoveredCellSide === 'right';\r\n  }\r\n\r\n  /**\r\n   * Adds row in table\r\n   * @private\r\n   */\r\n  _addRow() {\r\n    /*\r\n    ** 这段代码目前不太稳定，暂时屏蔽，统一在表的尾部添加 xiaowy 2020/10/09\r\n    const indicativeRow = this._hoveredCell.closest('TR');\r\n    let index = this._getHoveredSideOfContainer();\r\n\r\n    if (index === 1) {\r\n      index = indicativeRow.sectionRowIndex;\r\n      // if inserting after hovered cell\r\n      index = index + this._isBottomOrRight();\r\n    }\r\n\r\n    this._table.addRow(index);\r\n    */\r\n    this._table.addRow(this._table.rows);\r\n\r\n  }\r\n\r\n  /**\r\n   * Del row in table\r\n   * @private\r\n   * 国良添加 2020/09/19\r\n   */\r\n  _delRow() {\r\n    const indicativeRow = this._hoveredCell.closest('TR');\r\n    let index = this._getHoveredSideOfContainer();\r\n\r\n    if (index === 1) {\r\n      index = indicativeRow.sectionRowIndex;\r\n      // if inserting after hovered cell\r\n      index = index + this._isBottomOrRight();\r\n    }\r\n\r\n    this._table.delRow(index);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Adds column in table\r\n   * 暂时不用该功能\r\n   */\r\n  _addColumn() {\r\n    let index = this._getHoveredSideOfContainer();\r\n\r\n    if (index === 1) {\r\n      index = this._hoveredCell.cellIndex;\r\n      // if inserting after hovered cell\r\n      index = index + this._isBottomOrRight();\r\n    }\r\n\r\n    this._table.addColumn(index);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * if \"cntrl + Eneter\" is pressed then create new line under current and focus it\r\n   * 该方法不适合造型组件，因为造型组件表格主要是方便用户浏览修改，而不是增加行，所以enter的功能\r\n   * 和下箭头类似。xiaowy 2020/09/23\r\n   * _containerEnterPressed => _containerEnterPressedOld\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  _containerEnterPressedOld(event) {\r\n    // console.log('Enter _containerEnterPressed');\r\n    if (!(this._table.selectedCell !== null && !event.shiftKey)) {\r\n      return;\r\n    }\r\n    const indicativeRow = this._table.selectedCell.closest('TR');\r\n    let index = this._getHoveredSideOfContainer();\r\n    /**\r\n     * 修改enter的行为，当是最后一行时才添加新行，否则进行移动。xiaowy 2020/09/22\r\n     */\r\n    // console.log(index);\r\n    // 原有代码\r\n    // if (index === 1) {\r\n    //   index = indicativeRow.sectionRowIndex + 1;\r\n    // }\r\n    // const newstr = this._table.addRow(index);\r\n\r\n    // newstr.cells[0].click();\r\n    // 原有代码结束\r\n    const currentRowIndex = indicativeRow.sectionRowIndex;\r\n    const currentCellIndex = this._table.selectedCell.cellIndex;\r\n    if (currentRowIndex == this._table.body.rows.length - 1 &&\r\n      currentCellIndex == indicativeRow.cells.length - 1) { // table 的尾部且在最后一列\r\n      // if (index === 1) {\r\n      //   index = indicativeRow.sectionRowIndex + 1;\r\n      // }\r\n      index = indicativeRow.sectionRowIndex + 1;\r\n      const newstr = this._table.addRow(index);\r\n\r\n      newstr.cells[0].click();\r\n    }\r\n    else {\r\n      if (currentCellIndex < indicativeRow.cells.length - 1) {\r\n        // let paraent = this._table.selectedCell.paraent;\r\n        // console.log(indicativeRow);\r\n        // paraent.cells[1].click();\r\n        indicativeRow.cells[currentCellIndex + 1].click();\r\n      }\r\n      else {\r\n        let table = this._table.body;\r\n        let row = table.rows[currentRowIndex + 1]\r\n        // console.log(row);\r\n        if (row !== null && row !== undefined) {\r\n          row.cells[0].click();\r\n        }\r\n      }\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // console.log('_containerEnterPressed finished!');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * process Enter key function, see _containerEnterPressOld\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/23\r\n   */\r\n  _containerEnterPressed(event) {\r\n    // console.log('Enter _containerEnterPressed');\r\n    if (!(this._table.selectedCell !== null && !event.shiftKey)) {\r\n      // console.log('this._table.selectedCell', this._table.selectedCell);\r\n      return;\r\n    }\r\n    // this._processDownArrowKey(event);\r\n    // let input = this._table.selectedCell.querySelector('.' + CSS.inputField);\r\n    // let div = document.createElement('div');\r\n    // input.appendChild(div);\r\n    let selection = window.getSelection();\r\n    if (selection) {\r\n      let node = selection.focusNode;\r\n      if (node.nodeName === '#text') {\r\n        node = node.parentNode;\r\n      }\r\n      if (node) {\r\n        let div = document.createElement('div');\r\n        // let textNode = document.createTextNode('11');\r\n        let textNode = document.createElement('br');\r\n        div.appendChild(textNode);\r\n        node.appendChild(div);\r\n        // textNode.focus();\r\n        let range = selection.getRangeAt(0);\r\n        range.setStart(div, 1);\r\n        // textNode.textContent = ' ';\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n    }\r\n    console.log('_containerEnterPressed finished!');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理表格双击事件\r\n   */\r\n  _processDbClick(event) {\r\n    \r\n    if (!(this._table.selectedCell !== null && !event.shiftKey)) {\r\n      // console.log('this._table.selectedCell', this._table.selectedCell);\r\n      return;\r\n    }\r\n    // console.log(\"enter _processDbClick\");\r\n    let input = this._table.selectedCell.querySelector('.' + CSS.inputField);\r\n    let innerHTML = input.innerHTML.trim();\r\n    if (innerHTML.length === 0) {\r\n      console.log(\"enter _processDbClick---\", this._api);\r\n      if (this._clickTimeId) {\r\n        clearTimeout(this._clickTimeId);\r\n      }\r\n      this._clickTimeId = setTimeout(()=>{alert('api'),this._api.inlineToolbar.open();}, 250);\r\n      this._api.inlineToolbar.open();\r\n      // this._api.toolbar.open();\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      console.log(\"exit _processDbClick---\");\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   * process down, up, left, right arrow event for table\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/22\r\n   */\r\n  _containerArrowKeyPressed(event) {\r\n    console.log('enter _containerArrowKeyPressed');\r\n    if (!(this._table.selectedCell !== null && !event.shiftKey && !event.ctrlKey && !event.altKey)) {\r\n      return;\r\n    }\r\n    switch (event.keyCode) {\r\n      case 37: // left arrow key\r\n        this._processLeftArrowKey(event);\r\n        break;\r\n      case 38: // up arrow key\r\n        this._processUpArrowKey(event);\r\n        break;\r\n      case 39: // right arrow key\r\n        this._processRightArrowKey(event);\r\n        break;\r\n      case 40: // down arrow key\r\n        this._processDownArrowKey(event);\r\n        break;\r\n      case 9: // tab key similar to right arrow key\r\n        this._processRightArrowKey(event);\r\n        break;\r\n      default:\r\n        console.log('not implement!');\r\n        break;\r\n    }\r\n    // prevent default behavior\r\n    // event.preventDefault();\r\n    // event.stopPropagation();\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理右箭头：\r\n   * 如果在table中间(含顶部)左边列，对应行的右边列获得焦点\r\n   * 如果在table中间(含顶部)右边列，下一行的左边列获得焦点\r\n   * 如果在table的底部右边列，跳到第一行的左边列\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/22\r\n   */\r\n  _processRightArrowKey(event) {\r\n    console.log('enter _processRightArrowKey');\r\n    if (event.keyCode !== 9) {\r\n      let ret = this._moveCharacterInTableCellForRightArrow();\r\n      if (ret) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return;\r\n      }\r\n    }\r\n    // console.log('process right arrow key begin');\r\n    const indicativeRow = this._table.selectedCell.closest('TR');\r\n    const currentRowIndex = indicativeRow.sectionRowIndex;\r\n    const currentCellIndex = this._table.selectedCell.cellIndex;\r\n    const table = this._table.body;\r\n    const table_rows = table.rows;\r\n    if (currentRowIndex < table_rows.length - 1) {\r\n      const cells = indicativeRow.cells;\r\n      // current row left cell\r\n      if (currentCellIndex < cells.length - 1) {\r\n        cells[currentCellIndex + 1].click();\r\n      }\r\n      else { // next row\r\n        // console.log('right nex row',table_rows[currentRowIndex + 1].cells[currentCellIndex - 1]);\r\n        if (this._repeat !== undefined && this._repeat === -1) {\r\n          let div = table_rows[currentRowIndex + 1].cells[currentCellIndex - 1];\r\n          // console.log('right nex row', div);\r\n          div.click();\r\n          // let input = div.querySelector('.' + CSS.inputField);\r\n          // if (input) {\r\n          //   console.log('right nex row',input);\r\n          //   input.click();\r\n          // }\r\n        }\r\n        else {\r\n          let div = table_rows[currentRowIndex + 1].cells[currentCellIndex];\r\n          // console.log('right nex row', div);\r\n          div.click();\r\n          // let input = div.querySelector('.' + CSS.inputField);\r\n          // if (input) {\r\n          //   console.log('right nex row',input);\r\n          //   input.click();\r\n          // }\r\n        }\r\n        // table_rows[currentRowIndex + 1].cells[currentCellIndex - 1].click();\r\n      }\r\n    }\r\n    else { // bottom row\r\n      const cells = indicativeRow.cells;\r\n      console.log('bottom');\r\n      if (event.keyCode === 9) {\r\n        // 确认造型是否可以添加新对象属性\r\n        if (this._repeat !== undefined && this._repeat === 1) {\r\n          let oldSelectCell = this._table.selectedCell;\r\n          let rowIndexBegin = this._table.body.rows.length;\r\n          for (let i = 0; i < this._repeatWordsColl.length; i++) {\r\n            this._table.addRow();\r\n          }\r\n          // console.log('rowIndexBegin', rowIndexBegin);\r\n          // console.log('this._table.rows.length', this._table.body.rows.length);\r\n          for (let j = rowIndexBegin; j < this._table.body.rows.length; j++) {\r\n            // console.log('fill data');\r\n            let row = this._table.body.rows[j];\r\n            let cell = row.cells[0];\r\n            const input = cell.querySelector('.' + CSS.inputField);\r\n            input.innerHTML = this._repeatWordsColl[j - rowIndexBegin];\r\n          }\r\n          // oldSelectCell.click();\r\n          cells[currentCellIndex].click();\r\n        }\r\n        else {\r\n          if (currentCellIndex < cells.length - 1) {\r\n            cells[currentCellIndex + 1].click();\r\n          }\r\n          else { // first row\r\n            if (this._repeat !== undefined && this._repeat === 1) {\r\n              table_rows[0].cells[currentCellIndex - 1].click();\r\n            }\r\n            else {\r\n              table_rows[0].cells[currentCellIndex].click();\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if (currentCellIndex < cells.length - 1) {\r\n          cells[currentCellIndex + 1].click();\r\n        }\r\n        else { // first row\r\n          // console.log('go to first row')\r\n          if (this._repeat !== undefined && this._repeat === 1) {\r\n            table_rows[0].cells[currentCellIndex - 1].click();\r\n          }\r\n          else {\r\n            table_rows[0].cells[currentCellIndex].click();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理左箭头：\r\n   * 如果在table中间右边列，对应行的左边列获得焦点\r\n   * 如果在table中间左边列，上一行的右边列获得焦点\r\n   * 如果在table的顶部左边列，跳到第后一行的右边列\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/22\r\n   */\r\n  _processLeftArrowKey(event) {\r\n    console.log('Enter _processLeftArrowKey');\r\n    let ret = this._moveCharacterInTableCellForLeftArrow();\r\n    if (ret) {\r\n      return;\r\n    }\r\n    const indicativeRow = this._table.selectedCell.closest('TR');\r\n    const currentRowIndex = indicativeRow.sectionRowIndex;\r\n    // console.log('currentRowIndex:' + currentRowIndex);\r\n    const currentCellIndex = this._table.selectedCell.cellIndex;\r\n    // console.log('currentCellIndex:' + currentCellIndex);\r\n    const table = this._table.body;\r\n    const table_rows = table.rows;\r\n    if (currentRowIndex == 0) {// 在顶部行\r\n      const cells = indicativeRow.cells;\r\n      if (currentCellIndex == 0) { // 左边列\r\n        const last_row = table_rows[table_rows.length - 1];\r\n        last_row.cells[last_row.cells.length - 1].click();\r\n      }\r\n      else {\r\n        if (this._repeat !== undefined && this._repeat === -1) {\r\n          cells[currentCellIndex - 1].click();\r\n        }\r\n        else {\r\n          const last_row = table_rows[table_rows.length - 1];\r\n          last_row.cells[last_row.cells.length - 1].click();\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      const cells = indicativeRow.cells;\r\n      if (currentCellIndex == 0) { // 左边列\r\n        // console.log('move up');\r\n        const previous_row = table_rows[currentRowIndex - 1];\r\n        previous_row.cells[previous_row.cells.length - 1].click();\r\n      }\r\n      else {\r\n        // console.log('move left');\r\n        if (this._repeat !== undefined && this._repeat === -1) {\r\n          cells[currentCellIndex - 1].click();\r\n        }\r\n        else {\r\n          const previous_row = table_rows[currentRowIndex - 1];\r\n          previous_row.cells[previous_row.cells.length - 1].click();\r\n        }\r\n      }\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // console.log('_processLeftArrowKey finished!');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理下箭头：\r\n   * 如果在table中间（含顶部）右边列，下一行行的右边列获得焦点\r\n   * 如果在table中间（含顶部）左边列，下一行的左边列获得焦点\r\n   * 如果在table的底部左边列，跳到第一行的左边列\r\n   * 如果在table的底部右边列，跳到第一行的右边列\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/22\r\n   */\r\n  _processDownArrowKey(event) {\r\n    console.log('Enter _processDownArrowKey');\r\n    const indicativeRow = this._table.selectedCell.closest('TR');\r\n    const currentRowIndex = indicativeRow.sectionRowIndex;\r\n    // console.log('currentRowIndex:' + currentRowIndex);\r\n    const currentCellIndex = this._table.selectedCell.cellIndex;\r\n    // console.log('currentCellIndex:' + currentCellIndex);\r\n    const table = this._table.body;\r\n    const table_rows = table.rows;\r\n    if (currentRowIndex < table_rows.length - 1) { // not table bottom\r\n      const next_row = table_rows[currentRowIndex + 1];\r\n      // console.log('nextRowIndex:', currentRowIndex + 1, next_row);\r\n      next_row.cells[currentCellIndex].click()\r\n    }\r\n    else {\r\n      const next_row = table_rows[0]\r\n      next_row.cells[currentCellIndex].click();\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // console.log('_processDownArrowKey finished!');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 处理上箭头：\r\n   * 如果在table中间（含底部）右边列，上一行行的右边列获得焦点\r\n   * 如果在table中间（含底部）左边列，上一行的左边列获得焦点\r\n   * 如果在table的顶部左边列，跳到最后一行的左边列\r\n   * 如果在table的顶部右边列，跳到最后一行的右边列\r\n   * @param {KeyboardEvent} event\r\n   * added by xiaowy 2020/09/22\r\n   */\r\n  _processUpArrowKey(event) {\r\n    console.log('Enter _processUpArrowKey');\r\n    const indicativeRow = this._table.selectedCell.closest('TR');\r\n    const currentRowIndex = indicativeRow.sectionRowIndex;\r\n    // console.log('currentRowIndex:' + currentRowIndex);\r\n    const currentCellIndex = this._table.selectedCell.cellIndex;\r\n    // console.log('currentCellIndex:' + currentCellIndex);\r\n    const table = this._table.body;\r\n    const table_rows = table.rows;\r\n    if (currentRowIndex != 0) { // not table top\r\n      const nextRowIndex = currentRowIndex - 1;\r\n      const nextRow = table_rows[nextRowIndex];\r\n      // console.log('nextRowIndex:', nextRowIndex, nextRow);\r\n      nextRow.cells[currentCellIndex].click();\r\n    }\r\n    else {\r\n      const nextRowIndex = table_rows.length - 1;\r\n      // console.log('nextRowIndex:', nextRowIndex);\r\n      const nextRow = table_rows[nextRowIndex];\r\n      nextRow.cells[currentCellIndex].click();\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // console.log('_processUpArrowKey finished!');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * move character in table cell for right and left arrow key\r\n   * @return {Boolean} true:don't process later, false: reach cell end and move to next cell\r\n   * xiaowy 2020/10/09\r\n   */\r\n  _moveCharacterInTableCellForLeftArrow() {\r\n    let selection = window.getSelection();\r\n    // console.log(selection.toString());\r\n    let input = this._table.selectedCell.querySelector('.' + CSS.inputField);\r\n    // console.log(this._table.selectedCell);\r\n    // console.log(input);\r\n    if (input) {\r\n      let range = selection.getRangeAt(0)\r\n      if (range) {\r\n        // console.log('range', range);\r\n\r\n        if (range.collapsed) {\r\n          let node = range.endContainer;\r\n          console.log('node', node.nodeType);\r\n          if (node.nodeName === \"#text\") {\r\n            console.log('node', range.startOffset, node.nodeValue.length);\r\n            if (range.startOffset === 0) {\r\n              // go to previous Sibling\r\n              // console.log('go to previous Sibling',node.parentNode);\r\n              if (node.previousSibling) {\r\n                let sibling = node.previousSibling;\r\n                while (sibling && sibling.nodeName !== '#text') {\r\n                  console.log('move character left', sibling);\r\n                  sibling = sibling.previousSibling;\r\n                }\r\n                if (sibling) {\r\n                  let end = sibling.nodeValue.trim().length;\r\n                  range.setStart(sibling, end);\r\n                  return true;\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              } // go to parent\r\n              else if (node.parentNode) {\r\n                let parentNode = node.parentNode;\r\n                if (parentNode.nodeName === '#text') {\r\n                  range.setStart(parentNode, 0);\r\n                  return true;\r\n                }\r\n                else if (parentNode.previousSibling) {\r\n                  let parentPreviousSibling = parentNode.previousSibling;\r\n                  if (parentPreviousSibling.nodeName === '#text') {\r\n                    let end1 = parentPreviousSibling.nodeValue.trim().length;\r\n                    console.log('move parent sibling', parentPreviousSibling.nodeValue, end1);\r\n                    range.setStart(parentPreviousSibling, end1);\r\n                    return true;\r\n                  }\r\n                  // parent sibling childs\r\n                  else {\r\n                    let childs = parentPreviousSibling.childNodes;\r\n                    for (let i = 0; i < childs.length; i++) {\r\n                      let child = childs[i];\r\n                      if (child.nodeName === '#text') {\r\n                        let childEnd = child.nodeValue.trim().length - 1;\r\n                        range.setStart(child, childEnd);\r\n                        return true;\r\n                      }\r\n                    }\r\n                    return false;\r\n                  }\r\n\r\n                }\r\n\r\n              }\r\n              else {\r\n                return false;\r\n              }\r\n            }\r\n            else {\r\n              range.setStart(node, range.startOffset - 1);\r\n              return true;\r\n            }\r\n          }// other node type for todo\r\n          else {\r\n            let innerText = node.innerText.trim();\r\n            if (range.startOffset === innerText.length && !node.childNodes.length && !node.nextSibling) {\r\n              return false;\r\n            }\r\n            else {\r\n              return true;\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * move character in table cell for right and right arrow key\r\n   * @return {Boolean} true:don't process later, false: reach cell end and move to previous cell\r\n   * xiaowy 2020/10/12\r\n   */\r\n  _moveCharacterInTableCellForRightArrow() {\r\n    let selection = window.getSelection();\r\n    // console.log(selection.toString());\r\n    let input = this._table.selectedCell.querySelector('.' + CSS.inputField);\r\n    // console.log(this._table.selectedCell);\r\n    // console.log(input);\r\n    if (input) {\r\n      let range = selection.getRangeAt(0)\r\n      if (range) {\r\n        // console.log('range', range);\r\n\r\n        if (range.collapsed) {\r\n          let node = range.endContainer;\r\n          console.log('node', node.nodeType);\r\n          if (node.nodeName === \"#text\") {\r\n            console.log('node', range.startOffset, node.nodeValue.length);\r\n            if (range.startOffset === node.nodeValue.length) {\r\n              if (node.childNodes.length) {\r\n                // go to child\r\n                let firstChild = node.childNodes[0];\r\n                range.setStart(firstChild, 0);\r\n                return true;\r\n\r\n              } // go to next Sibling\r\n              else if (node.nextSibling) {\r\n                console.log('move node.nextSibling', node.nextSibling);\r\n                let sibling = node.nextSibling;\r\n                // while (sibling && sibling.nodeName !== '#text') {\r\n                //   sibling = sibling.nextSibling;\r\n                // }\r\n                if (sibling.nodeName !== '#text') {\r\n                  console.log('move node.nextSibling ok');\r\n                  range.setStart(sibling, 0);\r\n                  return true;\r\n                }\r\n                else {\r\n                  let childs = sibling.childNodes;\r\n                  for (let i = 0; i < childs.length; i++) {\r\n                    let child = childs[i];\r\n                    if (child.nodeName === '#text') {\r\n                      rang.setStart(child, 0);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  return false;\r\n                }\r\n              }\r\n              else if (node.parentNode.nextSibling) {\r\n                let parentNextSibling = node.parentNode.nextSibling;\r\n                console.log('move parent next sibling', parentNextSibling)\r\n                if (parentNextSibling.nodeName === '#text') {\r\n                  range.setStart(parentNextSibling, 0);\r\n                  return true;\r\n                }\r\n                let childs = parentNextSibling.childNodes;\r\n                for (let i = 0; i < childs.length; i++) {\r\n                  let child = childs[i];\r\n                  if (child.nodeName === '#text') {\r\n                    range.setStart(child, 0);\r\n                    return true;\r\n                  }\r\n                }\r\n                return false;\r\n              }// go to next row\r\n              else {\r\n                return false;\r\n              }\r\n            }\r\n            else {\r\n              range.setStart(node, range.startOffset + 1);\r\n              return true;\r\n            }\r\n          }\r\n          else {\r\n            console.log('not text node', node);\r\n            let innerText = node.innerText.trim();\r\n            if (range.startOffset === innerText.length && !node.childNodes.length && !node.nextSibling) {\r\n              return false;\r\n            }\r\n            else {\r\n              let childs = node.childNodes;\r\n              for (let i = 0; i < childs.length; i++) {\r\n                let child = childs[i];\r\n                if (child.nodeName === '#text') {\r\n                  range.setStart(child, range.startOffset + 1);\r\n                  return true;\r\n                }\r\n              }\r\n              let nextSibling = node.nextSibling;\r\n              if (nextSibling && nextSibling.nodeName === '#text') {\r\n                range.setStart(nextSibling, range.startOffset + 1);\r\n                return true;\r\n              }\r\n              return false;\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When the mouse enters the detection area\r\n   * @param {MouseEvent} event\r\n   */\r\n  _mouseEnterInDetectArea(event) {\r\n    if (this._container !== undefined) {\r\n      const coords = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getCoords\"])(this._container);\r\n      let side = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"getSideByCoords\"])(coords, event.pageX, event.pageY);\r\n\r\n      event.target.dispatchEvent(new CustomEvent('mouseInActivatingArea', {\r\n        'detail': {\r\n          'side': side\r\n        },\r\n        'bubbles': true\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 模拟从华安那边获取造型数据\r\n   *  @param {ElementEvent} event:回调的惯用法\r\n   * @param {TableContructor} that:回调的惯用法\r\n   * added by xiaowy 2020/09/27\r\n   * todo:使用华安的方法\r\n   */\r\n  _getModelDataFromDbDemo() {\r\n    let that = this;\r\n    const modelDataObj = [\r\n      {\r\n        Name: '正文',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '正文',\r\n        Tags: '正文 智能 自动',\r\n        Thumb: './assets/dog1.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '项目符号',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '正文',\r\n        Tags: '项目符号 编号 智能 自动',\r\n        Thumb: './assets/dog2.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '页标题',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '标题 副标题 引标',\r\n        Tags: '页标题 标题 智能 自动',\r\n        Thumb: './assets/dog3.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '封面标题',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '标题 副标题 口号 引标',\r\n        Tags: '封面标题 封面 标题 智能 自动',\r\n        Thumb: './assets/dog4.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '小节',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '标题',\r\n        Tags: '小节 标题 智能 自动',\r\n        Thumb: './assets/dog4.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '列表',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '标题 正文 图片',\r\n        Tags: '列表 特性 卖点 排列 智能 自动',\r\n        Thumb: './assets/dog5.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '编号',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '标题 正文 图片',\r\n        Tags: '编号 排列 数字 智能 自动',\r\n        Thumb: './assets/dog6.jpg',\r\n        Repeat: 1\r\n      },\r\n      {\r\n        Name: '图片',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片',\r\n        Tags: '图片 智能 自动',\r\n        Thumb: './assets/dog6.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: 'logo',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片 标题 副标题 引标',\r\n        Tags: 'logo 公司名称 智能 自动',\r\n        Thumb: './assets/dog7.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '二维码',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片',\r\n        Tags: '二维码 扫码 智能 自动',\r\n        Thumb: './assets/dog8.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '地址',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片 正文',\r\n        Tags: '地址 联系方式 电话 公司地址 智能 自动',\r\n        Thumb: './assets/dog9.jpg',\r\n        Repeat: 1,\r\n      },\r\n      {\r\n        Name: '强调',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '正文',\r\n        Tags: '强调 文字 智能 自动',\r\n        Thumb: './assets/dog9.jpg',\r\n        Repeat: -1,\r\n      },\r\n      {\r\n        Name: '时间线',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片 标题 正文',\r\n        Tags: '时间线 智能 自动',\r\n        Thumb: './assets/dog10.jpg',\r\n        Repeat: -1,\r\n      },\r\n      {\r\n        Name: '图片集',\r\n        SubName: '智能选择',\r\n        Info: '自动选择造型',\r\n        Fields: '图片 标题 正文 图片 标题 正文',\r\n        Tags: '图片集 图片 logo墙 人员介绍 合作伙伴 智能 自动',\r\n        Thumb: './assets/dog11.jpg',\r\n        Repeat: -1,\r\n      }\r\n    ]\r\n    let processModelSel = function (modelHeadCallBack = undefined) {\r\n      if (window.mmxaiModelList !== undefined) {\r\n        that._modelHeadCallBack = modelHeadCallBack;\r\n        window.mmxaiModelList(that._processParentUiResultCall());\r\n      }\r\n      else {\r\n        let rnd = Math.random() * 11\r\n        const index = Math.floor(rnd)\r\n        // demo select\r\n        alert('select ' + index);\r\n\r\n        const obj = modelDataObj[index];\r\n        // for debug\r\n        // const obj = modelDataObj[modelDataObj.length - 1];\r\n        // console.log('_getModelDataFromDbDemo:', obj);\r\n        // that._recontructParaTable(obj);\r\n        that._makeModelTables(obj, null, false);\r\n        if (modelHeadCallBack !== undefined) {\r\n          modelHeadCallBack(obj);\r\n        }\r\n        // return obj;\r\n      }\r\n    }\r\n    return processModelSel;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 回调函数\r\n   * 处理华安那边的ui结果数据\r\n   * @param {jsonObject} obj\r\n   */\r\n  _processParentUiResultCall() {\r\n    let that = this;\r\n    let _processParentUiResult = function (obj) {\r\n      // console.log('enter _processParentUiResult');\r\n      console.log('_processParentUiResult obj', obj);\r\n      that._makeModelTables(obj, null, false);\r\n      if (that._modelHeadCallBack !== undefined) {\r\n        that._modelHeadCallBack(obj);\r\n      }\r\n      // console.log('exit _processParentUiResult');\r\n    };\r\n    return _processParentUiResult;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * 重构参数表格\r\n   * @param {modelObjectInformation} modelObj\r\n   */\r\n  _recontructParaTable(modelObj) {\r\n    if (modelObj.Name) {\r\n      console.log(\"modelObj.Name\", modelObj.Name);\r\n      this._descTitle.innerHTML = '【' + '造型-' + modelObj.Name + '】';\r\n    }\r\n    const fields = modelObj.Fields;\r\n    let fieldArr = fields.split(' ');\r\n    if (fieldArr.length > 0) {\r\n      // check table  is empty\r\n      if (this._table === undefined) {\r\n        this._table = new _table__WEBPACK_IMPORTED_MODULE_3__[\"Table\"]();\r\n        // let tablebr = document.createElement('br');\r\n        // this._table.htmlElement.appendChild(tablebr);\r\n        this._container.appendChild(this._table.htmlElement);\r\n      }\r\n      else {\r\n        // let paraRows = !!this._table.body.rows ? this._table.body.rows : []\r\n        // console.log('paraRows1:', paraRows);\r\n        // paraRows = !!paraRows? paraRows : []; \r\n        // console.log('paraRows:', paraRows);\r\n        while (this._table.rows > 0) {\r\n          this._table.delRow();\r\n        }\r\n      }\r\n      let data = {};\r\n      data.content = [];\r\n      data.contentSeprateIndex = [];\r\n      let isFielsRepeat = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_1__[\"checkFiledsIsRepeat\"])(modelObj.Fields);\r\n      if (isFielsRepeat.isRepeat) {\r\n        this._repeatWordsColl = isFielsRepeat.repeatWords.trim().split(' ');\r\n      }\r\n      else if (this._repeat !== undefined && this._repeat === 1) {\r\n        this._repeatWordsColl = modelObj.Fields.trim().split(' ');\r\n        // let arr = modelObj.Fields.trim();\r\n        // if (arr.length === 1) {\r\n        //   this._repeatWordsColl = arr;\r\n        // }\r\n      }\r\n      let objSepIndex = 0;\r\n      fieldArr.forEach((item, index) => {\r\n        let temp = item.trim();\r\n        if (temp.length === 0) {\r\n          return;\r\n        }\r\n        let objArr = [];\r\n        objArr.push(temp);\r\n        objArr.push(' ');\r\n        data.content.push(objArr);\r\n        // fields is repeat\r\n        if (isFielsRepeat.isRepeat && temp === isFielsRepeat.repeatWords) {\r\n          if (objSepIndex > 0)\r\n            data.contentSeprateIndex.push(objSepIndex - 1); // 上一行！！！\r\n        }\r\n        objSepIndex++;\r\n      });\r\n      let config = { rows: fieldArr.length, cols: 2 }\r\n      // if (this._repeat === -1) {\r\n      //   this._table.firstColumnIsRead = false;\r\n      // }\r\n      this._table.repeat = this._repeat;\r\n      const size = this._resizeTable(data, config);\r\n      this._fillTable(data, size);\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * get model json object\r\n   * @returns {JsonResult}\r\n   */\r\n  getJsonResult() {\r\n    // let obj = {};\r\n    // console.log('enter getJsonResult');\r\n    let temp = this._modelHeadTable.getHeadParam();\r\n    // console.log('temp:', temp);\r\n    let ret = {};\r\n    if (temp) {\r\n      try {\r\n        let obj = {};\r\n        obj['板块头'] = temp['板块头'];\r\n        obj['属性'] = temp['属性'];\r\n        // let obj = Object.assign({}, temp['板块头']);\r\n        // console.log(\"tableConstructor getJsonResult11\", obj);\r\n        if (this._table !== undefined) {\r\n          obj['列表'] = this._table.getJsonResult();\r\n        }\r\n        else {\r\n          obj['列表'] = [];\r\n        }\r\n        ret[temp.name] = obj;\r\n\r\n        // let paraName = this._descTitle.innerHTML;\r\n        // let leftIndex = paraName.indexOf('【');\r\n        // let rightIndex = paraName.indexOf('】');\r\n        // let realName = paraName.substring(leftIndex + 1, rightIndex - leftIndex);\r\n        // obj['name'] = this._descTitle.innerHTML;\r\n        console.log(\"tableConstructor getJsonResult\", ret);\r\n        return ret;\r\n      }\r\n      catch (e) {\r\n        console.log('getJsonResule occur exception:', e);\r\n        return ret;\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"tableConstructor getJsonResult\", ret);\r\n      return ret;\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/tableConstructor.js?");

/***/ }),

/***/ "./src/tableReadOnly.js":
/*!******************************!*\
  !*** ./src/tableReadOnly.js ***!
  \******************************/
/*! exports provided: TableReadOnly */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TableReadOnly\", function() { return TableReadOnly; });\n/* harmony import */ var _documentUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./documentUtils */ \"./src/documentUtils.js\");\n/* harmony import */ var _styles_tableReadOnly_pcss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/tableReadOnly.pcss */ \"./src/styles/tableReadOnly.pcss\");\n/* harmony import */ var _styles_tableReadOnly_pcss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_tableReadOnly_pcss__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\nconst CSS = {\r\n  table: 'tc-readOnlyTable',\r\n  inputField: 'tc-readOnlyTable__inp',\r\n  cell: 'tc-readOnlyTable__cell',\r\n  wrapper: 'tc-readOnlyTable__wrap',\r\n  area: 'tc-readOnlyTable__area',\r\n};\r\n\r\n/**\r\n * Generates and manages _table contents.\r\n */\r\nclass TableReadOnly {\r\n  /**\r\n   * Creates\r\n   */\r\n  constructor() {\r\n    this._numberOfColumns = 0;\r\n    this._numberOfRows = 0;\r\n    this._element = this._createTableWrapper();\r\n    this._table = this._element.querySelector('table');\r\n\r\n    // comment by xiaowy 2020/09/21\r\n    // this._hangEvents();\r\n  }\r\n\r\n  /**\r\n   * Add column in table on index place\r\n   * @param {number} index - number in the array of columns, where new column to insert,-1 if insert at the end\r\n   */\r\n  addColumn(index = -1) {\r\n    this._numberOfColumns++;\r\n    /** Add cell in each row */\r\n    const rows = this._table.rows;\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const cell = rows[i].insertCell(index);\r\n\r\n      this._fillCell(cell);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add row in table on index place\r\n   * @param {number} index - number in the array of columns, where new column to insert,-1 if insert at the end\r\n   * @return {HTMLElement} row\r\n   */\r\n  addRow(index = -1) {\r\n    this._numberOfRows++;\r\n    const row = this._table.insertRow(index);\r\n\r\n    this._fillRow(row);\r\n    return row;\r\n  };\r\n\r\n  /**\r\n   * Del row in table on index place\r\n   * 国良增加 2020/09/19\r\n   * @param {number} index - number in the array of columns\r\n   *\r\n  */\r\n  delRow(index = 0) {\r\n    if (index >= this._numberOfRows) return;\r\n    this._table.deleteRow(index);\r\n    this._numberOfRows--;\r\n  };\r\n\r\n\r\n  /**\r\n   * get html element of table\r\n   * @return {HTMLElement}\r\n   */\r\n  get htmlElement() {\r\n    return this._element;\r\n  }\r\n\r\n  /**\r\n   * get real table tag\r\n   * @return {HTMLElement}\r\n   */\r\n  get body() {\r\n    return this._table;\r\n  }\r\n\r\n  /**\r\n   * returns selected/editable cell\r\n   * @return {HTMLElement}\r\n   */\r\n  get selectedCell() {\r\n    return this._selectedCell;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Creates table structure\r\n   * @return {HTMLElement} tbody - where rows will be\r\n   */\r\n  _createTableWrapper() {\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.wrapper], null, [Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('table', [CSS.table])]);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Create editable area of cell\r\n   * @return {HTMLElement} - the area\r\n   */\r\n  _createContenteditableArea() {\r\n    // comment and modify by xiaowy 2020/09/21\r\n    // return create('div', [CSS.inputField], {contenteditable: 'true'});\r\n    return Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.inputField], {contenteditable: 'false'});\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Fills the empty cell of the editable area\r\n   * @param {HTMLElement} cell - empty cell\r\n   */\r\n  _fillCell(cell) {\r\n    cell.classList.add(CSS.cell);\r\n    const content = this._createContenteditableArea();\r\n\r\n    cell.appendChild(Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"create\"])('div', [CSS.area], null, [content]));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * Fills the empty row with cells  in the size of numberOfColumns\r\n   * @param row = the empty row\r\n   */\r\n  _fillRow(row) {\r\n    for (let i = 0; i < this._numberOfColumns; i++) {\r\n      const cell = row.insertCell();\r\n\r\n      this._fillCell(cell);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * hang necessary events\r\n   */\r\n  _hangEvents() {\r\n    \r\n    this._table.addEventListener('focus', (event) => {\r\n      this._focusEditField(event);\r\n    }, true);\r\n    \r\n\r\n    this._table.addEventListener('blur', (event) => {\r\n      this._blurEditField(event);\r\n    }, true);\r\n\r\n    this._table.addEventListener('keydown', (event) => {\r\n      this._pressedEnterInEditField(event);\r\n    });\r\n\r\n    this._table.addEventListener('click', (event) => {\r\n      this._clickedOnCell(event);\r\n    });\r\n\r\n    this._table.addEventListener('mouseover', (event) => {\r\n      this._mouseEnterInDetectArea(event);\r\n      event.stopPropagation();\r\n    }, true);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When you focus on an editable field, remembers the cell\r\n   * @param {FocusEvent} event\r\n   */\r\n  _focusEditField(event) {\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      return;\r\n    }\r\n    this._selectedCell = event.target.closest('.' + CSS.cell);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When you blur on an editable field, remembers the cell\r\n   * @param {FocusEvent} event\r\n   */\r\n  _blurEditField(event) {\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      return;\r\n    }\r\n    this._selectedCell = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When enter is pressed when editing a field\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  _pressedEnterInEditField(event) {\r\n    if (!event.target.classList.contains(CSS.inputField)) {\r\n      return;\r\n    }\r\n    if (event.keyCode === 13 && !event.shiftKey) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When clicking on a cell\r\n   * @param {MouseEvent} event\r\n   */\r\n  _clickedOnCell(event) {\r\n    if (!event.target.classList.contains(CSS.cell)) {\r\n      return;\r\n    }\r\n    const content = event.target.querySelector('.' + CSS.inputField);\r\n    content.focus();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * When the mouse enters the detection area\r\n   * @param {MouseEvent} event\r\n   */\r\n  _mouseEnterInDetectArea(event) {\r\n    if (!event.target.classList.contains(CSS.area)) {\r\n      return;\r\n    }\r\n\r\n    const coordsCell = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"getCoords\"])(event.target.closest('TD'));\r\n    const side = Object(_documentUtils__WEBPACK_IMPORTED_MODULE_0__[\"getSideByCoords\"])(coordsCell, event.pageX, event.pageY);\r\n\r\n    event.target.dispatchEvent(new CustomEvent('mouseInActivatingArea', {\r\n      'detail': {\r\n        'side': side\r\n      },\r\n      'bubbles': true\r\n    }));\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://MmxModel/./src/tableReadOnly.js?");

/***/ })

/******/ });
});